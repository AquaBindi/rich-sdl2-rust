var searchIndex = JSON.parse('{\
"rich_sdl2_rust":{"doc":"rich-sdl2-rust","t":[12,13,13,6,3,4,3,3,3,6,13,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,5,0,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,0,11,11,11,11,11,11,12,0,12,11,11,11,11,11,11,11,12,0,11,0,0,11,11,11,0,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,8,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,0,12,11,11,5,5,11,11,0,11,11,11,0,12,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,0,12,12,0,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,18,18,18,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,18,18,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,13,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,13,3,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,12,12,12,12,12,13,13,3,13,13,4,13,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,13,13,13,13,4,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,4,4,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,6,0,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,0,0,0,11,11,11,11,0,3,11,11,11,11,11,11,11,11,12,11,11,11,11,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,11,11,0,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,11,0,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,18,3,3,18,18,18,3,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,0,12,11,11,0,12,12,12,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,4,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,12,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,3,5,11,11,11,11,11,11,11,11,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,13,8,8,18,18,3,3,13,4,18,18,13,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,3,3,3,3,18,3,18,3,3,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,13,13,3,13,3,4,13,3,13,3,3,13,13,13,13,13,3,3,3,4,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,13,6,3,3,4,13,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,5,5,13,13,13,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,18,18,3,3,8,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,5,13,3,8,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,10,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,8,0,11,11,10,0,11,11,0,11,11,12,0,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,12,12,0,12,12,12,0,11,11,11,11,11,11,11,11,12,12,0,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,0,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,8,13,13,13,3,4,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,0,11,11,11,11,11,10,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,8,8,13,13,13,3,8,3,3,4,6,13,13,13,8,13,13,3,13,3,13,13,13,13,13,13,13,13,13,13,3,3,4,3,4,3,10,11,12,11,11,12,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,10,11,11,0,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,10,11,11,12,12,10,11,12,11,12,10,11,11,10,11,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,12,13,13,3,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,3,13,13,3,4,13,11,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Others","OutOfMemory","Result","Sdl","SdlError","SdlVersion","Ticks","Timer","TimerCallback","UnsupportedFeature","Video","add","add","audio","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clipboard","clone","clone","clone","clone_into","clone_into","clone_into","cmp","color","current_driver","default","delay","display","displays","drop","drop","drop","eq","eq","error","error_then_panic","event","file","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","gamma_ramp","geo","gl_context","haptic","has_screen_keyboard","hint","into","into","into","into","into","into","major","metal","minor","ne","ne","new","new","new","now","partial_cmp","patch","performance","platform","power","renderer","reset_gl_attribute","revision_num","revision_str","screen_saver","sub","surface","system","texture","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","video_drivers","vulkan","window","msg","AudioDevice","AudioDeviceLock","AudioDeviceProperty","MicrophoneDevice","SpeakerDevice","all_audio_drivers","all_devices","all_devices","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","channels","clone","clone_into","current_driver","device_name","drop","eq","event","fmt","fmt","fmt","format","format","from","from","from","from","id","id","id","into","into","into","into","lock","ne","open","open","queue","sample_freq","samples","spec","status","status","stream","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wav","AudioBuffer","borrow","borrow_mut","channels","clone","clone_into","convert","convert_in","fmt","format","from","into","mix","mix_in","new","samples","to_owned","try_from","try_into","type_id","Added","AudioDeviceEvent","Removed","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","to_owned","try_from","try_into","type_id","device_id","device_id","is_microphone","is_microphone","timestamp","timestamp","AudioFormat","AudioFormatFlag","BIG_ENDIAN","FLOAT","SIGNED","all","bit_size","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","extend","flag","float32_lsb","float32_msb","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","ne","not","partial_cmp","remove","set","signed16_lsb","signed16_msb","signed32_lsb","signed32_msb","signed8","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","unsigned16_lsb","unsigned16_msb","unsigned8","DequeueAudio","QueuedAudio","borrow","borrow","borrow_mut","borrow_mut","clear","clear","drop","drop","fmt","fmt","from","from","into","into","new","new","queue","queue_bytes_size","read","try_from","try_from","try_into","try_into","type_id","type_id","AudioCallback","AudioSpec","AudioSpecBuilder","CHANNELS","FORMAT","FREQUENCY","FallbackFlag","SAMPLES","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","cmp","complement","contains","difference","drop","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","ne","new","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","AudioStatus","Paused","Playing","Stopped","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","to_owned","try_from","try_into","type_id","AudioStream","available_bytes_len","borrow","borrow_mut","clear","drop","flush","fmt","from","into","new","read","try_from","try_into","type_id","write","Wav","as_mut","as_ref","as_slice","as_slice_mut","borrow","borrow_mut","drop","fmt","from","into","new","to_vec","try_from","try_into","type_id","ClipboardText","borrow","borrow_mut","eq","fmt","from","into","into_string","ne","new","text","try_from","try_into","type_id","Add","AlphaBlend","BlendMode","Mul","None","Rgb","Rgba","a","b","b","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","g","g","into","into","into","ne","ne","partial_cmp","partial_cmp","pixel","r","r","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","Palette","Pixel","PixelFormat","PixelFormatProperty","PixelMask","TrueColor","as_u32","bits_per_pixel","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_pixel","clone","clone","clone_into","clone_into","cmp","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","kind","kind","layout","ne","ne","new","order","palette","partial_cmp","pixel_by_rgb","pixel_by_rgba","property","rgb_from_pixel","rgba_from_pixel","set_palette","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","0","alpha","blue","green","red","Array","Bitmap","BppMask","FourCode","Packed","PixelFormatKind","Unknown","a_mask","b_mask","borrow","borrow","borrow_mut","borrow_mut","bpp","clone","clone_into","default","fmt","fmt","from","from","from_bpp_mask","g_mask","into","into","name","r_mask","to_bpp_mask","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","layout","order","order","order","ty","ty","ty","PackedPixelLayout","_1010102","_1555","_2101010","_332","_4444","_5551","_565","_8888","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","to_owned","try_from","try_into","type_id","Abgr","Abgr","Argb","Argb","ArrayPixelOrder","Bgr","Bgra","Bgra","Bgrx","BitmapPixelOrder","PackedPixelOrder","Rgb","Rgba","Rgba","Rgbx","Xbgr","Xrgb","_1234","_4321","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Palette","borrow","borrow_mut","drop","fmt","from","into","new","num_colors","set_colors","try_from","try_into","type_id","ArrayPixelType","BitmapPixelType","F16","F32","Index1","Index4","Index8","PackedPixelType","U16","U32","U8","_16","_32","_8","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Display","Dpi","Mode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone_into","clone_into","current_mode","ddpi","dpi","eq","fmt","fmt","fmt","from","from","from","hdpi","height","into","into","into","modes","name","ne","original_mode","pixel_format","refresh_rate","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","usable_bounds","vdpi","width","EventBox","EventHandler","app","borrow","borrow_mut","drop","drop","from","game_controller","handle_audio_device","handle_controller","handle_drop","handle_editing","handle_gesture","handle_input","handle_joystick","handle_keyboard","handle_mouse","handle_quit","handle_window","into","joystick","keyboard","mouse","new","poll","sensor","text","touch","try_from","try_into","type_id","wait_next_event_with","window","QuitEvent","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","timestamp","to_owned","try_from","try_into","type_id","Begin","Complete","DropEvent","File","Text","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","to_owned","try_from","try_into","type_id","file","text","timestamp","timestamp","timestamp","timestamp","window_id","window_id","window_id","window_id","GameController","GameControllerSet","add_mapping","add_mapping_from_file","axis","bind_for_axis","bind_for_button","borrow","borrow","borrow_mut","borrow_mut","button","controllers","default","drop","event","fmt","fmt","from","from","into","into","map","mapping","name","new","try_from","try_from","try_into","try_into","type_id","type_id","Axis","LeftX","LeftY","RightX","RightY","TriggerLeft","TriggerRight","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from_str","hash","into","partial_cmp","to_mapping_string","to_owned","to_string","try_from","try_into","type_id","Back","Button","Down","FourButton","Guide","Left","LeftFour","LeftShoulder","LeftStick","Right","RightFour","RightShoulder","RightStick","Start","Up","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","from","from","from_str","hash","hash","into","into","ne","partial_cmp","partial_cmp","to_mapping_string","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","Axis","Button","ControllerEvent","DeviceAdded","DeviceRemapped","DeviceRemoved","borrow","borrow_mut","clone","clone_into","fmt","from","from","from","from","into","to_owned","try_from","try_into","type_id","axis","button","id","id","id","id","is_pressed","joystick","timestamp","timestamp","timestamp","timestamp","timestamp","value","Axis","Button","Hat","MapInput","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","ne","to_owned","try_from","try_into","type_id","index","index","index","mask","InputIndex","Joystick","JoystickId","JoystickSet","axes","axis","axis","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","buttons","clone","clone","clone","clone_into","clone_into","clone_into","default","disable","drop","enable","eq","eq","eq","event","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","guid","guid","hat","hat","hats","instance_id","into","into","into","into","is_enabled","name","ne","ne","ne","new","power_level","power_level","to_owned","to_owned","to_owned","trackball","trackball","trackballs","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","Axes","Axis","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","state","try_from","try_from","try_into","try_into","type_id","type_id","0","Button","Buttons","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","is_pressed","try_from","try_from","try_into","try_into","type_id","type_id","Axis","Button","DeviceAdded","DeviceRemoved","Hat","JoystickEvent","Trackball","borrow","borrow_mut","fmt","from","from","from","from","from","from","into","try_from","try_into","type_id","axis","button","hat","id","id","id","id","id","is_pressed","joystick","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","trackball","value","value","x_amount","y_amount","Guid","InvalidLengthError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","from","from","from","from_str","into","into","mapping","ne","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","CENTERED","DOWN","Hat","Hats","LEFT","LEFT_DOWN","LEFT_UP","PovHat","RIGHT","RIGHT_DOWN","RIGHT_UP","UP","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","ne","not","partial_cmp","remove","set","state","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","Empty","Full","Low","Medium","PowerLevel","Unknown","Wired","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","to_owned","try_from","try_into","type_id","0","Trackball","Trackballs","borrow","borrow","borrow_mut","borrow_mut","delta","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","KeySymbol","KeyboardEvent","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from","from","into","into","is_pressed","is_repeated","key_code","key_code","key_mod","key_mod","ne","ne","scan_code","scan_code","symbol","timestamp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","window_id","A","Again","Alterase","Ampersand","App1","App2","Application","ApplicationBack","ApplicationBookmarks","ApplicationForward","ApplicationHome","ApplicationRefresh","ApplicationSearch","ApplicationStop","Asterisk","At","AudioFastForward","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioRewind","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","C","Calculator","Cancel","CapsLock","Caret","Clear","ClearAgain","Colon","Comma","Computer","Copy","CrSel","CurrencySubunit","CurrencyUnit","Cut","D","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","E","Eject","End","Equals","Escape","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","G","Greater","H","Hash","Help","Home","I","Insert","J","K","KeyCode","KeyboardIllumDown","KeyboardIllumToggle","KeyboardIllumUp","Keypad0","Keypad00","Keypad000","Keypad1","Keypad2","Keypad3","Keypad4","Keypad5","Keypad6","Keypad7","Keypad8","Keypad9","KeypadA","KeypadAmpersand","KeypadAt","KeypadB","KeypadBackspace","KeypadBinary","KeypadC","KeypadClear","KeypadClearEntry","KeypadColon","KeypadComma","KeypadD","KeypadDblAmpersand","KeypadDblverticalBar","KeypadDecimal","KeypadDivide","KeypadE","KeypadEnter","KeypadEquals","KeypadEqualsAs400","KeypadExclam","KeypadF","KeypadGreater","KeypadHash","KeypadHexadecimal","KeypadLeftBrace","KeypadLeftParen","KeypadLess","KeypadMemAdd","KeypadMemClear","KeypadMemDivide","KeypadMemMultiply","KeypadMemRecall","KeypadMemStore","KeypadMemSubtract","KeypadMinus","KeypadMultiply","KeypadOctal","KeypadPercent","KeypadPeriod","KeypadPlus","KeypadPlusMinus","KeypadPower","KeypadRightBrace","KeypadRightParen","KeypadSpace","KeypadTab","KeypadVerticalBar","KeypadXor","L","LAlt","LCtrl","LGui","LShift","Left","LeftBracket","Leftparen","Less","M","Mail","MediaSelect","Menu","Minus","Mode","Mute","N","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumLockClear","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Power","PrintScreen","Prior","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Return","Return2","Right","RightBracket","Rightparen","S","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","SysReq","T","Tab","ThousandsSeparator","U","Underscore","Undo","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","Y","Z","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","from","from_name","into","name","to_owned","try_from","try_into","type_id","ALT","CAPS","CTRL","GUI","KeyMod","LALT","LCTRL","LGUI","LSHIFT","MODE","NONE","NUM","RALT","RCTRL","RGUI","RSHIFT","SHIFT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","current","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","ne","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","A","Again","AltErase","Apostrophe","App1","App2","Application","ApplicationBack","ApplicationBookmarks","ApplicationForward","ApplicationHome","ApplicationRefresh","ApplicationSearch","ApplicationStop","AudioFastForward","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioRewind","AudioStop","B","Backslash","Backspace","BrightnessDown","BrightnessUp","C","Calculator","Cancel","CapsLock","Clear","ClearAgain","Comma","Computer","Copy","CrSel","CurrencySubunit","CurrencyUnit","Cut","D","DecimalSeparator","Delete","DisplaySwitch","Down","E","Eject","End","Equals","Escape","ExSel","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","G","Grave","H","Help","Home","I","Insert","International1","International2","International3","International4","International5","International6","International7","International8","International9","J","K","KeyboardIllumDown","KeyboardIllumToggle","KeyboardIllumUp","Keypad0","Keypad00","Keypad000","Keypad1","Keypad2","Keypad3","Keypad4","Keypad5","Keypad6","Keypad7","Keypad8","Keypad9","KeypadA","KeypadAmpersand","KeypadAt","KeypadB","KeypadBackspace","KeypadBinary","KeypadC","KeypadClear","KeypadClearEntry","KeypadColon","KeypadComma","KeypadD","KeypadDblAmpersand","KeypadDblVerticalBar","KeypadDecimal","KeypadDivide","KeypadE","KeypadEnter","KeypadEquals","KeypadEqualsAs400","KeypadExclam","KeypadF","KeypadGreater","KeypadHash","KeypadHexadecimal","KeypadLeftBrace","KeypadLeftParen","KeypadLess","KeypadMemAdd","KeypadMemClear","KeypadMemDivide","KeypadMemMultiply","KeypadMemRecall","KeypadMemStore","KeypadMemSubtract","KeypadMinus","KeypadMultiply","KeypadOctal","KeypadPercent","KeypadPeriod","KeypadPlus","KeypadPlusMinus","KeypadPower","KeypadRightBrace","KeypadRightParen","KeypadSpace","KeypadTab","KeypadVerticalBar","KeypadXor","L","LAlt","LCtrl","LGui","LShift","Lang1","Lang2","Lang3","Lang4","Lang5","Lang6","Lang7","Lang8","Lang9","Left","LeftBracket","M","Mail","MediaSelect","Menu","Minus","Mode","Mute","N","NUM_SCANCODES","NonUsBackslash","NonUsHash","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumLockClear","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Period","Power","PrintScreen","Prior","Q","R","RAlt","RCtrl","RGui","RShift","Return","Return2","Right","RightBracket","S","ScanCode","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","SysReq","T","Tab","ThousandsSeparator","U","Undo","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","Y","Z","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","from","into","to_owned","try_from","try_into","type_id","Button","Left","Middle","Motion","MouseButton","MouseButtonEvent","MouseEvent","MouseMotionEvent","MouseWheelEvent","Right","Wheel","X1","X2","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","clicks","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cursor","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","is_flipped","is_pressed","mouse_id","mouse_id","mouse_id","move_amount","ne","ne","ne","ne","pos","pos","relative","scroll_amount","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","window_id","window_id","window_id","0","0","0","Cursor","borrow","borrow_mut","clone","clone_into","fmt","from","hide","into","is_shown","new","show","to_owned","try_from","try_into","type_id","RelativeMouse","borrow","borrow_mut","drop","fmt","from","into","new","try_from","try_into","type_id","Accel","Gyro","Others","Sensor","SensorKind","SensorSet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","default","drop","fmt","fmt","fmt","from","from","from","into","into","into","kind","name","new","sensors","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","TextEditingEvent","TextInput","TextInputEvent","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","drop","fmt","fmt","fmt","from","from","from","from","from","into","into","into","length","new","start","text","text","timestamp","timestamp","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","window_id","window_id","TouchDevice","TouchFinger","all_devices","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","gesture","id","into","into","load_dollar_templates","pressure","record","to_owned","touch_fingers","try_from","try_from","try_into","try_into","type_id","type_id","x","y","Dollar","DollarRecord","Gesture","GestureEvent","Multi","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from","into","into","save_dollar_template","save_dollar_template_all","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","delta_dist","delta_theta","error","gesture","gesture","num_fingers","num_fingers","timestamp","timestamp","touch","touch","x","x","y","y","Close","Enter","Exposed","FocusGained","FocusLost","Hidden","Leave","Maximized","Minimized","Moved","Resized","Restored","Shown","SizeChanged","WindowEvent","WindowEventDetails","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","details","eq","fmt","fmt","from","from","from","into","into","ne","timestamp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","window_id","0","0","0","RwOps","base_path","borrow","borrow_mut","drop","flush","fmt","from","from_file","from_mem","from_mem_mut","into","mode","pref_path","ptr","read","read_be16","read_be32","read_be64","read_le16","read_le32","read_le64","read_u8","seek","size","tell","try_from","try_into","type_id","write","write_be16","write_be32","write_be64","write_le16","write_le32","write_le64","write_u8","OpenMode","append","binary","borrow","borrow_mut","clone","clone_into","create","default","fmt","from","into","new","read","text","to_owned","truncate","try_from","try_into","type_id","write","0","GammaRamp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","ne","new","to_owned","try_from","try_into","type_id","Line","Point","Rect","Scale","Size","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom_left","bottom_right","center","clip_with","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","default","enclosed","end","eq","eq","eq","eq","eq","extend_bottom","extend_left","extend_right","extend_top","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bottom_right","from_center","from_xs_ys","has_intersection","height","horizontal","intersect","into","into","into","into","into","is_empty","is_in","left","ne","ne","ne","ne","ne","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","right","size","start","to_owned","to_owned","to_owned","to_owned","to_owned","top","top_right","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","up_left","vertical","width","with_bottom","with_left","with_right","with_top","x","y","AdaptiveVerticalSync","BufferExt","ContextSwitchExt","DEBUG","FORWARD_COMPATIBLE","GlContext","GlContextFlag","Immediate","IntervalKind","RESET_ISOLATION","ROBUST_ACCESS","VerticalSync","all","as_ptr","attribute","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","drawable_size","drop","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","load_lib","ne","new","not","partial_cmp","proc_address","remove","set","set_context","set_swap_interval","set_swap_interval","sub","sub_assign","supported_extension","swap_buffer","swap_buffer","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unload_lib_all","ACCELERATED_VISUAL","ACCUM_ALPHA_SIZE","ACCUM_BLUE_SIZE","ACCUM_GREEN_SIZE","ACCUM_RED_SIZE","ALPHA_SIZE","BLUE_SIZE","BUFFER_SIZE","CONTEXT_FLAGS","CONTEXT_MAJOR_VERSION","CONTEXT_MINOR_VERSION","CONTEXT_NO_ERROR","CONTEXT_PROFILE_MASK","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_RESET_NOTIFICATION","DEPTH_SIZE","DOUBLEBUFFER","FRAMEBUFFER_SRGB_CAPABLE","GREEN_SIZE","GlAttribute","GlAttributeKind","MULTISAMPLEBUFFERS","MULTISAMPLESAMPLES","RED_SIZE","SHARE_WITH_CURRENT_CONTEXT","STENCIL_SIZE","STEREO","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","new","not","partial_cmp","remove","set","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","AUTO_CENTER","CONSTANT","CUSTOM","GAIN","Haptic","HapticProperty","HapticSet","JoystickHaptic","LEFT_RIGHT","MouseHaptic","PAUSE","PausedHaptic","PendingEffect","PlayingEffect","RAMP","SAW_TOOTH_DOWN","SAW_TOOTH_UP","SINE","STATUS","TRIANGLE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","default","deref","deref","destroy","destroy","difference","direction","drop","drop","drop","effect","effects_creation_capacity","effects_playing_capacity","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","haptics","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","is_all","is_effect_supported","is_empty","name","ne","new","new","new","new_effect","not","num_axes","partial_cmp","pause","property","remove","rumble","run","set","set_auto_center","set_gain","stop","stop_all_effect","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unpause","update","Cartesian","Direction","Polar","Spherical","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","ne","to_owned","try_from","try_into","type_id","degree_100","elevation_degree_100","x","y","z","z_degree_100","0","0","Condition","Condition","Constant","Custom","Custom","Envelope","HapticEffect","LeftRight","Level","Periodic","Play","Ramp","Ramp","SawToothUp","Sine","SwaToothDown","Triangle","Trigger","Vector3","Wave","WaveKind","attack_length","attack_level","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","center","channels","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","dead_band","delay","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fade_length","fade_level","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","interval","into","into","into","into","into","into","into","into","into","into","into","kind","length","magnitude","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","negative_coefficient","negative_level","offset","period","period","phase","positive_coefficient","positive_level","samples","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","1","1","1","1","1","2","2","2","2","2","3","3","3","3","4","4","4","4","large_magnitude","length","small_magnitude","HapticRumble","borrow","borrow_mut","fmt","from","into","new","play","stop","try_from","try_into","type_id","Default","HintCallback","HintEvent","HintObserver","HintPriority","Normal","Override","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_hints","clone","clone","clone_into","clone_into","default","drop","eq","fmt","fmt","fmt","from","from","from","get_hint","get_hint_bool","into","into","into","new","set_hint","set_hint_with_priority","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MetalView","borrow","borrow_mut","drawable_size","drop","from","into","metal_layer","new","try_from","try_into","type_id","counter","frequency","Charged","Charging","NoBattery","OnBattery","PowerInfo","PowerState","Unknown","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from","into","into","ne","now","remaining_ratio","remaining_seconds","state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","BOTH","HORIZONTAL","PasteExFlip","PasteExOption","PasteExt","Renderer","VERTICAL","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","center","clip","clip","clone","clone","clone_into","clone_into","cmp","complement","contains","default","default","difference","driver","drop","empty","eq","eq","extend","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_integer_scale","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","info","insert","intersection","intersects","into","into","into","is_all","is_empty","is_forced_integer_scale","logical_size","ne","ne","new","not","output_size","partial_cmp","paste","paste","paste_ex","paste_ex","pen","remove","renderer_info","rotation_degrees","scale","set","set_logical_size","set_scale","set_target","set_target_default","set_viewport","sub","sub_assign","symmetric_difference","target_area","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","viewport","window","ClippedRenderer","borrow","borrow_mut","drop","fmt","from","into","try_from","try_into","type_id","drivers","Accelerated","RendererInfo","RendererInfoExt","RendererKind","Software","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","from","into","into","is_v_sync","kind","max_texture_size","name","renderer_info","supported_formats","supported_texture","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Pen","blend_mode","borrow","borrow_mut","clear","color","drop","fill_rect","fill_rects","fmt","from","into","line","lines","new","point","points","renderer","set_blend_mode","set_color","stroke_rect","stroke_rects","try_from","try_into","type_id","ScreenSaver","borrow","borrow_mut","drop","fmt","from","into","new","try_from","try_into","type_id","RawSurface","Surface","alpha","alpha_mod","alpha_mod","as_ptr","blend","blend","blend","bmp","borrow","borrow_mut","clip_rect","clipped","clipped","clipped","clone","clone_into","cloned","cloned","cloned","color","color_mod","color_mod","copy_to","copy_to","fill_rect","fill_rect","fill_rects","fill_rects","flags","fmt","format","from","h","into","list_blitmap","locked","map","owned","pitch","pixels","refcount","rle","rle","rle","set_palette","set_palette","to_owned","try_from","try_into","type_id","userdata","w","window","AlphaMod","alpha","as_ptr","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","Blended","as_ptr","blend_mode","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","0","Bmp","BmpSaveError","BmpSaveExt","as_ptr","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","fmt","fmt","from","from","into","into","new","save_bmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Clipped","area","as_ptr","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","Cloned","as_ptr","borrow","borrow_mut","drop","fmt","from","into","try_from","try_into","type_id","ColorMod","as_ptr","borrow","borrow_mut","color","fmt","from","into","try_from","try_into","type_id","Owned","as_ptr","borrow","borrow_mut","drop","fmt","from","into","new","try_from","try_into","type_id","Rle","RleLock","as_ptr","borrow","borrow","borrow_mut","borrow_mut","drop","fmt","fmt","from","from","into","into","lock","pixels","pixels_mut","try_from","try_from","try_into","try_into","type_id","type_id","WindowSurface","as_ptr","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","update_window_surface","update_window_surface_rects","cpu","ram_size","simd_alloc","cache_line_size","count","has_3d_now","has_alti_vec","has_arm_simd","has_avx","has_avx2","has_avx512f","has_mmx","has_neon","has_rdtsc","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","simd_alignment","SimdAllocator","allocate","borrow","borrow_mut","deallocate","from","into","try_from","try_into","type_id","QueryExt","Static","Streaming","Target","Texture","TextureAccess","access","access","alpha_mod","bind_to_current_gl_context","borrow","borrow","borrow_mut","borrow_mut","clip","color_mod","drop","fmt","format","format","from","from","from_surface","into","into","lock","lock","new","set_alpha_mod","set_clip","set_color_mod","size","size","try_from","try_from","try_into","try_into","type_id","type_id","unbind_from_current_gl_context","Lock","as_bytes","as_bytes_mut","borrow","borrow_mut","drop","fmt","from","into","try_from","try_into","type_id","VkInstance","VkSurface","as_raw_surface","borrow","borrow","borrow_mut","borrow_mut","drawable_size","extensions","fmt","fmt","from","from","into","into","new","new","try_from","try_from","try_into","try_into","type_id","type_id","BorderExt","BorderWidths","Brightness","BrightnessExt","ConfigExt","Draggable","FullScreen","FullScreenWithCurrentDesktop","Gamma","GammaExt","GammaParam","HitTest","HitTestResult","HitTester","Maximized","Metal","Minimized","MouseGrabExt","Normal","Normal","Opacity","OpenGl","Position","ResizeBottom","ResizeBottomLeft","ResizeBottomRight","ResizeLeft","ResizeRight","ResizeTop","ResizeTopLeft","ResizeTopRight","Software","Vulkan","Window","WindowBuilder","WindowContextKind","WindowCoord","WindowFormat","WindowState","add_frame","add_frame","allow_high_dpi","as_f32","as_f32","blue","blue","border_widths","border_widths","borderless","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","brightness","brightness","builder","centered","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","context_kind","coord","cursor","default","default","display","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreign","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_id","full_screen","gamma","gamma","grab","grab","grabbed","green","green","hidden","hide","id","input_grabbed","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_grabbed","is_grabbed","is_screen_keyboard_shown","left","max_size","max_size","maximize","message_box","min_size","min_size","minimize","mouse_capture","mouse_focused","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_window","on_focus","on_mouse","opacity","opacity","partial_cmp","partial_cmp","pixel_format","pos","pos","raise","red","red","remove_frame","remove_frame","resizable","restore","right","set_brightness","set_brightness","set_context","set_gamma","set_gamma","set_icon","set_max_size","set_max_size","set_min_size","set_min_size","set_opacity","set_opacity","set_pos","set_pos","set_resizable","set_resizable","set_size","set_size","set_title","set_title","show","size","size","state","surface","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","undefined","ungrab","ungrab","with_clamped","with_clamped","x","y","Arrow","Crosshair","Cursor","Hand","IBeam","No","SizeAll","SizeNesw","SizeNs","SizeNwse","SizeWe","SystemCursorKind","Wait","WaitArrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","colored","customized","default","drop","eq","fmt","fmt","from","from","into","into","redraw","set","system","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Button","ButtonId","ColorScheme","Error","Information","MessageBox","MessageBoxKind","Warning","add_button","background","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_background","button_border","button_selected","cancel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color_scheme","confirm","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","message","ne","ne","new","normal","show","text","title","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["rich_sdl2_rust","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::SdlError","rich_sdl2_rust::audio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::audio::buffer","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::audio::event","","","","","","","","","","","","","","","rich_sdl2_rust::audio::event::AudioDeviceEvent","","","","","","rich_sdl2_rust::audio::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::audio::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::audio::spec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::audio::status","","","","","","","","","","","","","","","","","rich_sdl2_rust::audio::stream","","","","","","","","","","","","","","","","rich_sdl2_rust::audio::wav","","","","","","","","","","","","","","","","rich_sdl2_rust::clipboard","","","","","","","","","","","","","","rich_sdl2_rust::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::color::pixel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::color::pixel::PixelFormatProperty","","","","","rich_sdl2_rust::color::pixel::kind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::color::pixel::kind::PixelFormatKind","","","","","","","","rich_sdl2_rust::color::pixel::layout","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::color::pixel::order","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::color::pixel::palette","","","","","","","","","","","","","rich_sdl2_rust::color::pixel::ty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::app","","","","","","","","","","","","","","rich_sdl2_rust::event::drop","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::drop::DropEvent","","","","","","","","","","rich_sdl2_rust::event::game_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::game_controller::axis","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::game_controller::button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::game_controller::button::Button","","rich_sdl2_rust::event::game_controller::event","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::game_controller::event::ControllerEvent","","","","","","","","","","","","","","rich_sdl2_rust::event::game_controller::map","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::game_controller::map::MapInput","","","","rich_sdl2_rust::event::joystick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::axis","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::button","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::event","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::event::JoystickEvent","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::guid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::hat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::power_level","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::joystick::trackball","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::keyboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::keyboard::key_coderich_sdl2_rust::event::keyboard::key_mod","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::keyboard::scan_code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::mouse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::mouse::MouseEvent","","","rich_sdl2_rust::event::mouse::cursor","","","","","","","","","","","","","","","","rich_sdl2_rust::event::mouse::relative","","","","","","","","","","","rich_sdl2_rust::event::sensor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::sensor::SensorKind","rich_sdl2_rust::event::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::touch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::touch::gesture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::touch::gesture::GestureEvent","","","","","","","","","","","","","","","rich_sdl2_rust::event::window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::event::window::WindowEventDetails","","","rich_sdl2_rust::file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::file::mode","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::gamma_ramp","","","","","","","","","","","","","","","","","rich_sdl2_rust::geo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::gl_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::gl_context::attribute","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::haptic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::haptic::direction","","","","","","","","","","","","","","","","","","rich_sdl2_rust::haptic::direction::Direction","","","","","","rich_sdl2_rust::haptic::effect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::haptic::effect::HapticEffect","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::haptic::rumble","","","","","","","","","","","","rich_sdl2_rust::hint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::metal","","","","","","","","","","","","rich_sdl2_rust::performance","","rich_sdl2_rust::power","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::renderer::clip","","","","","","","","","","rich_sdl2_rust::renderer::driver","rich_sdl2_rust::renderer::info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::renderer::pen","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::screen_saver","","","","","","","","","","","rich_sdl2_rust::surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::surface::alpha","","","","","","","","","","","rich_sdl2_rust::surface::blend","","","","","","","","","","","rich_sdl2_rust::surface::bmp","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::surface::clipped","","","","","","","","","","","rich_sdl2_rust::surface::cloned","","","","","","","","","","","rich_sdl2_rust::surface::color","","","","","","","","","","","rich_sdl2_rust::surface::owned","","","","","","","","","","","","rich_sdl2_rust::surface::rle","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::surface::window","","","","","","","","","","","","rich_sdl2_rust::system","","","rich_sdl2_rust::system::cpu","","","","","","","","","","","","","","","","","rich_sdl2_rust::system::simd_alloc","","","","","","","","","","rich_sdl2_rust::texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::texture::lock","","","","","","","","","","","","rich_sdl2_rust::vulkan","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::windowrich_sdl2_rust::window::cursor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_rust::window::message_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","There is other reasons.","There is no free memory.","A specialized <code>std::result::Result</code> type for this crate.","A root controller for SDL2. But some sub-feature does not …","An error occurred from SDL2.","A version for SDL2.","An elapsed time from when SDL2 has initialized. Please …","A timer invokes a <code>TimerCallback</code> with the interval.","A callback for <code>Timer</code>, that returns an interval for next …","The feature is unsupported on the platform.","A video controller by SDL2.","","","Provides audio device control, configuration, wav format …","","","","","","","","","","","","","Clipboard controls.","","","","","","","","Color managements for graphics.","Returns the name of the current video driver.","","Stops the current thread for <code>ms</code> milliseconds, then returns.","Querying display information.","Returns a list of displays.","","","","","","Reads the error string from SDL2.","On an unrecoverable error detected, panics with the …","SDL2 event system and handlers.","A file handing on SDL2.","","","","","","","","","","","","","A gamma ramp for display color management.","Geometry structures such as <code>Point</code>, <code>Size</code>, <code>Rect</code> and so on.","OpenGL contexts and attributes.","Haptic devices, which give the players to feedback by some …","Returns whether the screen keyboard is supported.","Getting/setting hints for SDL2 features working.","","","","","","","A major number in the version.","Metal API support in SDL2.","A minor number in the version.","","","Setup the SDL2 system.","Constructs a timer with initial interval and callback.","Constructs a video controller from a root controller.","Gets a current <code>Ticks</code>.","","A patch number in the version.","A counter for performance analysis.","Gets the platform string.","System power monitoring.","Renderer for a window, to render some geometries or query …","Resets all OpenGL attributes.","REturns the revision number.","Returns the revision string.","Screen saving that allows the screen to be blanked by a …","","Surface, providing flexible modification for the pixels.","Querying some system information.","Texture used to draw the image to <code>Renderer</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the version of SDL2.","Returns the names of the video drivers.","Vulkan support in SDL2. It accepts the instance from <code>ash</code> …","Window managements, graphics and mouse controls.","The message describing reasons.","Common methods for an audio device, such as a speaker and …","A lock to prevent an audio device from calling the …","A property of an audio device.","An audio device to input sound.","An audio device to output sound.","Returns all of audio driver names recognized on now.","Returns all of speaker audio device names on now.","Returns all of microphone audio device names on now.","","","","","","","","","An audio buffer <code>AudioBuffer&lt;T&gt;</code> with a format, sample …","The numbers of channels of an audio device.","","","Returns the current audio driver name, or <code>None</code> if it does …","Returns the device name of the id <code>device_id</code>. Please set …","","","An event related on an audio device.","","","","Type definitions for a format of audio data.","The format of an audio device.","","","","","Returns the id of an audio device.","","","","","","","Obtains the lock preventing from calling the callback …","","Opens the audio device named <code>device</code> with the specification …","Opens the audio device named <code>device</code> with the specification …","Structures to use an audio device by pushing methods.","The sample frequencies of an audio device..","The sample rates of an audio device.","Provides tools to make a specification to require what an …","A status of an audio device.","Returns the status of an audio device.","An audio stream allows to read and write by streaming …","","","","","","","","","","","","","","A structure for wav format.","An audio buffer with a format, sample rates, numbers of …","","","Returns the numbers of channels of the audio buffer.","","","Convert into another <code>AudioBuffer</code> with different format, …","Convert and write into another existing <code>AudioBuffer</code>.","","Returns the format of the audio buffer.","","","Mix into another <code>AudioBuffer</code> with the specified <code>volume</code>.","Mix into another existing <code>AudioBuffer</code> with the specified …","Constructs an audio buffer from arguments. The size of …","Returns the sample rates of the audio buffer.","","","","","An event when an audio device was added.","An event occurs on an audio device was added/removed.","An event when an audio device was removed.","","","","","","","","","","","","","The id of an added audio device.","The id of a removed audio device.","Whether it is an audio device to record.","Whether it is an audio device to record.","When this event occurred.","When this event occurred.","A format to represent how is stored samples in audio data.","A flag to represent what type is used in audio data.","Whether a type is big endian.","Whether a type is floating-point number.","Whether a type is signed.","Returns the set containing all flags.","A size in bits of a type.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","A flag to represent characteristics of a type.","A format for floating-point little endian 32-bit data.","A format for floating-point big endian 32-bit data.","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","A format for signed little endian 16-bit data.","A format for signed big endian 16-bit data.","A format for signed little endian 32-bit data.","A format for signed big endian 32-bit data.","A format for signed 8-bit data.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","A format for unsigned little endian 16-bit data.","A format for unsigned big endian 16-bit data.","A format for unsigned 8-bit data.","A queue to read data to record the sound with …","A queue to push data to play the sound with <code>SpeakerDevice</code>.","","","","","Clears all audio data in the queue to stop to play, but it …","Clears all audio data in the queue to prevent queue from …","","","","","","","","","Constructs a queue from a <code>SpeakerDevice</code>.","Constructs a queue from <code>MicrophoneDevice</code>.","Queues the <code>data</code>. Returns an <code>Err</code> on failure.","Returns the size of the queue in bytes.","","","","","","","","A type of the callback to interact with the raw audio …","A specification to require what an audio device is.","A builder to build an information representing what …","Allows to fallback numbers of channels.","Allows to fallback a format.","Allows to fallback frequencies.","A flag what component may fallback into an actual audio …","Allows to fallback sample rates.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Create a builder for building <code>AudioSpecBuilder</code>. On the …","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Constructs an audio specification with the optional …","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","A playing status of an audio device.","An audio device is open but not playing the sound.","An audio device is open and playing the sound.","An audio device is closed or on error.","","","","","","","","","","","","","","An audio stream to read and write audio data by streaming …","Returns the available length of the stream in bytes.","","","Clears the audio data in the stream.","","","","","","Constructs a stream from two audio buffers.","","","","","","A wav format buffer.","","","Treats as an <code>u8</code> slice.","Treats as an mutable <code>u8</code> slice.","","","","","","","Constructs a wav buffer from file named <code>file_name</code>.","Convert into a vector.","","","","A text from the clipboard.","","","","","","","Converts into <code>String</code>.","","Get a clipboard text if exists.","Returns a reference to the clipboard string .","","","","Blending colors by addition.","Blending colors by their alpha values.","A mode for blending colors.","Blending colors by multiplication.","Not blend, overwrites a color by the another one.","A RGB color structure.","A RGBA color structure.","An alpha component in RGB.","A blue component in RGB.","A blue component in RGB.","","","","","","","","","","","","","","","","","","","","","","","","","","","A green component in RGB.","A green component in RGB.","","","","","","","","Pixel definitions for operating colors.","A red component in RGB.","A red component in RGB.","","","","","","","","","","","","","","A pixel format with a palette, so a pixel has an index of …","A simple pixel that can convert into <code>u32</code>.","A pixel format.","A property of a pixel format.","A bit mask to extract a component.","A pixel has own color information.","Convert into <code>u32</code>.","Returns the bits per pixel of the format.","","","","","","","","","Returns the bytes per pixel of the format.","","","","","","","","","","","","","","","","","","","","","Kinds for a pixel format, aggregates type, layout and …","Returns the kind of the format.","Layouts for a pixel format.","","","Constructs a pixel format from <code>PixelFormatKind</code>, or <code>Err</code> on …","Pixel components orders for a pixel format.","Palettes for a bitmap pixel format.","","Converts <code>Rgb</code> into <code>Pixel</code>.","Converts <code>Rgba</code> into <code>Pixel</code>.","Returns the property of the format.","Converts <code>Pixel</code> into <code>Rgb</code>.","Converts <code>Pixel</code> into <code>Rgba</code>.","Overwrites the palette with a new <code>Palette</code>.","","","","","","","","","","","Types for a pixel format.","","","","","","A mask of alpha component.","A mask of blue component.","A mask of green component.","A mask of red component.","A pixel array format.","An indexed bitmap format with a palette.","Bpp and RGBA mask.","A special format such as YUV in FourCC code.","A packed pixel format.","A kind of pixel format.","A format not supported by SDL2.","Mask for the alpha component.","Mask for the blue component.","","","","","Bits per pixel, normally 15, 16 or 32.","","","","","","","","Constructs from <code>BppMask</code>.","Mask for the green component.","","","Returns the name for the pixel format, or empty string if …","Mask for the red component.","Converts to <code>BppMask</code>, if able to do.","","","","","","","","","The layout of the pack.","The type of the bitmap.","The order of the pack.","The order of the array.","The type of the bitmap.","The type of the pack.","The type of the array.","A layout for a packed pixel format.","A layout is in 32 bits with 4 components where only one …","A layout is in 16 bits with 4 components where only one …","A layout is in 32 bits with 4 components where only one …","A layout is in 8 bits with 4 components, as below:","A layout is in 16 bits with 4 components with same size, …","A layout is in 16 bits with 4 components where only one …","A layout is in 16 bits with 3 components where only one …","A layout is in 32 bits with 4 components with same size, …","","","","","","","","","","","","","An order of 4 components is ABGR.","An order stored in ABGR.","An order of 4 components is ARGB.","An order stored in ARGB.","A pixel byte order from low byte to high byte for a array …","An order stored in BGR.","An order of 4 components is BGRA.","An order stored in BGRA.","An order of 3 components is left aligned BGR.","A pixel order in a bitmap pixel format.","A pixel order in a packed pixel format.","An order stored in RGB.","An order of 4 components is RGBA.","An order stored in RGBA.","An order of 3 components is left aligned RGB.","An order of 3 components is right aligned BGR.","An order of 3 components is right aligned RGB.","An order in big endian.","An order in little endian.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A controller for a palette in an indexed bitmap pixel …","","","","","","","Constructs a palette with numbers of colors.","Returns the numbers of colors in the palette.","Sets colors to the palette, or panics if <code>colors</code> was too …","","","","A type in a pixel array format.","A type in a bitmap pixel format.","A type of array is <code>f16</code> (note that not supported by first …","A type of array is <code>f32</code>.","An 1 bit index of the palette with 2 colors.","A 4 bits index of the palette with 16 colors.","An 8 bits index of the palette with 256 colors.","A type in a packed pixel format.","A type of array is <code>u16</code>.","A type of array is <code>u32</code>.","A type of array is <code>u8</code>.","An unsigned 16 bits.","An unsigned 32 bits.","An unsigned 8 bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A display queries bounds, name, dpi and modes.","Densities per inch of the display.","A mode of the display.","","","","","","","Returns the bounds of the display if available.","","","","","Returns the current mode of the display.","A diagonal density per inch.","Returns the dpi information <code>Dpi</code> if available.","","","","","","","","A horizontal density per inch.","A height of the display.","","","","Returns the modes supported by the display.","Returns the name of the display.","","Returns the original mode of the display.","A pixel format of the display.","A refresh rate of the display.","","","","","","","","","","","","Returns the usable bounds of the display if available.","A vertical density per inch.","A width of the display.","It takes the closure of handler to register, and delivers …","An event handler to receive some event structure,","Events occurring on the application.","","","Events on to drag and drop something to a window.","","","A logical game controller that attached to a physical …","Registers the handler to handle <code>AudioDeviceEvent</code>.","Registers the handler to handle <code>ControllerEvent</code>.","Registers the handler to handle <code>DropEvent</code>.","Registers the handler to handle <code>TextEditingEvent</code>.","Registers the handler to handle <code>GestureEvent</code>.","Registers the handler to handle <code>TextInputEvent</code>.","Registers the handler to handle <code>JoystickEvent</code>.","Registers the handler to handle <code>KeyboardEvent</code>.","Registers the handler to handle <code>MouseEvent</code>.","Registers the handler to handle <code>QuitEvent</code>.","Registers the handler to handle <code>WindowEvent</code>.","","A physical joystick device, controlling based on <code>InputIndex</code>…","Events related on the keyboard.","Events and utilities for the mouse.","Constructs an event box from the video system.","Polling the events and triggers the event handlers.","Setup and reading data from other sensors.","Controls of a simple text input field.","Controls touch devices, fingers, and gestures.","","","","Waits until the next event occurs, but unlock with timeout …","Events for the window.","An event on quitting the application.","","","","","","","","","When this event occurred.","","","","","A dragging began.","The dragging completed.","An event occurred when the item was dropped on a window.","A file was dropped.","A text was dropped.","","","","","","","","","","","","","A path of the file dropped.","A dropped text.","When this event occurred.","When this event occurred.","When this event occurred.","When this event occurred.","An id of the window that was dropped.","An id of the window that was dropped.","An id of the window that was started to drag.","An id of the window that was ended to drag.","A logical game controller manages binding of the physical …","All of recognized game controllers at initialized.","Applies mapping string, or returns <code>Err</code> on failure.","Applies mapping file, or returns <code>Err</code> on failure.","Axes for a game controller.","Returns the bind for an axis if exists.","Returns the bind for a button if exists.","","","","","Buttons for a game controller.","Returns the <code>GameController</code> list.","","","An event related on a game controller.","","","","","","","A definition of a mapping structure.","Returns the string of all mapping <code>GameController</code> holds.","Returns the name of the game controller.","Constructs and initializes the system and recognizes …","","","","","","","An axis like sticks and trigger buttons on a game …","An horizontal input of the left stick.","An vertical input of the left stick.","An horizontal input of the right stick.","An vertical input of the right stick.","An trigger button on the left.","An trigger button on the right.","","","","","","","","","","","","","Returns the mapping string if exists.","","","","","","A back button on the center.","A button on a game controller except the trigger buttons. …","A button on the down.","An one of four buttons which be placed like the diamond.","A meta button on the center.","A button on the left.","Four buttons on the left.","A sub trigger button on the left.","A stick push button on the left.","A button on the right.","Four buttons on the right.","A sub trigger button on the right.","A stick push button on the right.","A start button on the center.","A button on the up.","","","","","","","","","","","","","","","","","","","","","","","","Returns the mapping string if exists.","","","","","","","","","","","","An axis was changed.","A button was changed.","An event occurs on inputted from a game controller or …","A game controller was added.","The game controller was remapped.","The game controller was removed.","","","","","","","","","","","","","","","A changed axis.","A changed button.","An id of the joystick having this axis.","An id of the joystick having this button.","The id of the removed joystick.","The id of the remapped joystick.","Whether the button was pressed.","An added joystick.","When this event occurred.","When this event occurred.","When this event occurred.","When this event occurred.","When this event occurred.","The changed value. The directions “down” and “right…","It is attached to the axis.","It is attached to the button.","It is attached to the hat.","A mapping that the logical button is attached to the …","","","","","","","","","","","","","","","The physical index of the button.","The physical index of the axis.","The physical index of the hat.","The mask of the hat.","An index on the input device on the joystick. This is only …","A physical joystick device manages its states, input …","An id of the joystick. It can be used to share/duplicate …","A set of all recognized <code>Joystick</code> at initialized.","Returns axes <code>Axes</code> that the joystick has.","Axes for a physical joystick.","Returns an axis of <code>index</code> if it exists.","","","","","","","","","Buttons for a physical joystick.","Returns a button of <code>index</code> if it exists.","Returns buttons <code>Buttons</code> that the joystick has.","","","","","","","","Turns the joystick into disable.","","Turns the joystick into enable.","","","","An event related on a joystick.","","","","","","","","","","Constructs from <code>JoystickId</code> if it is valid.","The GUID of joystick devices.","Returns the GUID of the joystick.","Hats for a physical joystick.","Returns a hat of <code>index</code> if it exists.","Returns hats <code>Hats</code> that the joystick has.","Returns the instance id <code>JoystickId</code>.","","","","","Returns whether the joystick is enabled.","Returns the name of the joystick.","","","","Constructs and initializes the system and recognizes …","A representation of the power level of the battery in the …","Returns the power level of the joystick.","","","","Trackballs for a physical joystick.","Returns a trackball of <code>index</code> if it exists.","Returns trackballs <code>Trackballs</code> that the joystick has.","","","","","","","","","","","","","","A set of <code>Axis</code> for a physical joystick.","An axis for a physical joystick.","","","","","","","","","","","Returns the state of axis.","","","","","","","","A button for a physical joystick.","A set of <code>Button</code> for a physical joystick.","","","","","","","","","","","Returns whether the button is pressed.","","","","","","","An Axis was changed,","A button was changed.","A joystick was added.","The joystick was removed.","A hat was changed.","An event occurs on inputted from a joystick or changed a …","A trackball was changed,","","","","","","","","","","","","","","The index of an axis.","The index of a button.","The index of a hat.","The id of a joystick that has an axis.","The id of a joystick that has a trackball.","The id of a joystick that has a button.","The id of a joystick that has a hat.","The id of the removed joystick.","Whether the button was pressed.","An added joystick.","When this event occurred.","When this event occurred.","When this event occurred.","When this event occurred.","When this event occurred.","When this event occurred.","The index of a trackball.","The changed value.","The changed value.","The changed value, scroll amounts of x direction.","The changed value, scroll amounts of y direction.","A GUID associated with joystick devices.","An error to tell the failure on parsing <code>Guid</code> from string, …","","","","","","","","","","","","","","","","","","","","Returns mapping string for the game controller having the …","","","","","","","","","","","","","It is not tilted.","It is on the down.","A hat on a physical joystick.","A set of <code>Hat</code> for a physical joystick.","It is on the left.","It is on the down and left.","It is on the up and left.","A direction of pov hat, representing with a bit flag.","It is on the right.","It is on the down and right.","It is on the up and right.","It is on the up.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the pov hat state of the joystick.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The power level is a few left.","The power level is full.","The power level is on low.","The power level is on medium.","A power level of a joystick.","A power level is unavailable.","The power is coming from wired.","","","","","","","","","","","","","","A trackball on a physical joystick.","A set of <code>Trackball</code> for a physical joystick.","","","","","Returns the delta between the current ball position and …","","","","","","","","","","","","","A symbol on the keyboard with the modification and the …","An event on interacting to the keyboard.","","","","","","","","","","","","","","","","","","","Whether the key of symbol is pressed.","Whether the key of symbol is repeated.","Virtual key codes corresponded to physical scan codes.","The virtual key code on the keyboard.","Definitions of key modification codes.","The key modification on the keyboard.","","","Actual scan codes corresponded to virtual key codes.","The actual key code on the keyboard.","The pressed/released symbol.","When this event occurred.","","","","","","","","","The id of the window focusedeft or right alt pressed.","Caps lock pressed.","Left or right control pressed.","Left or right meta pressed.","A key modification flag.","Left alt pressed.","Left control pressed.","Left meta pressed.","Left shift pressed.","Alt graphic pressed.","No mod key pressed.","Num lock pressed.","Right alt pressed.","Right control pressed.","Right meta pressed.","Right shift pressed.","Left or right shift pressed.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the current modification status on the keyboard.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</codebutton event <code>MouseButtonEvent</code>.","The left button of the mouse.","The middle or wheel button of the mouse.","A motion event <code>MouseMotionEvent</code>.","A kind of the mouse button.","An event that th mouse button was pressed/released.","An event related on the mouse.","An event that the mouse was moved.","An event that the mouse wheel was scrolled.","The right button of the mouse.","A wheel event <code>MouseWheelEvent</code>.","The x1 of the mouse.","The x2 of the mouse.","","","","","","","","","","","The button state of the mouse.","The button state of the mouse.","The click count of the button.","","","","","","","","","","","Controlling cursor to show/hide.","","","","","","","","","","","","","","","","","","","","","","","","Whether the scroll direction is inverted.","Whether the mouse button is pressed.","The id of the moved.","The id of the moved.","The id of the moved.","The moved amount of the mouse.","","","","","The mouse position.","The mouse position.","Hold the cursor position and change to get relative …","How the wheel scrolled.","When this event occurred.","When this event occurred.","When this event occurred.","","","","","","","","","","","","","","","","","","","","","The id of the window focused.","The id of the window focused.","The id of the window focused.","","","","This controls the cursor on the window. It can show/hide …","","","","","","","Hides the cursor on the window.","","Returns whether the cursor is shown.","Constructs cursor control from the window.","Shows the cursor on the window.","","","","","It provides the relative mouse mode, which hiding and …","","","","","","","Starts the relative mouse mode, but returns …","","","","The accelerometer.","The gyroscope.","The others unrecognized by SDL2.","A sensor loaded by SDL2.","A kind of the other sensors.","A set of <code>Sensor</code>, containing other sensors.","","","","","","","","","Reads some <code>f32</code> data by count","","","","","","","","","","","","Returns the kind of the sensor","Returns the name of the sensor","Setup the system and recognizes the sensors.","Returns the sensors slice.","","","","","","","","","","","","An event on editing conversion on a software input method.","A controller of inputting texts.","An event on input the text directly or confirm the …","","","","","","","","","","","","","","","","","","","","","","","The length of editing characters.","Starts to input the text on area <code>input_rect</code>.","The editing position from the start.","The text inputted.","The text inputted.","When this event occurred.","When this event occurred.","","","","","","","","","","","","The id of the window focused.","The id of the window focused.","A device that receives the finger input.","A finger input, which having coordinates and pressures.","Setup the system and recognize all touch devices.","","","","","","","","","","","Gesture controller and events.","Returns the id of the finger.","","","Loads $1 template from <code>src</code> and returns the numbers of …","Returns the pressures of the finger.","Starts to record the gesture. After invoking this and …","","Returns all the touching fingers.","","","","","","","Returns the x pos of the finger.","Returns the y pos of the finger.","The gesture was recognized by $1.","The gesture was recorded for $1.","A gesture controller by $1 gesture recognition system.","An event on recognized a gesture","The gesture was multi touches.","","","","","","","","","","","","","","","","","Saves gesture into <code>dst</code> and returns the numbers of succeed …","Saves all gestures into <code>dst</code> and returns the numbers of …","","","","","","","","","The distance difference among fingers on the gesture.","The rotating amount of fingers on the gesture.","The error from the template.","The id of the nearest gesture.","The id of the nearest gesture.","The numbers of fingers on the gesture.","The numbers of fingers on the gesture.","When this event occurred.","When this event occurred.","The touch device the gesture detected.","The touch device the gesture detected.","The normalized x coord of the center on the gesture.","The normalized x coord of the center on the gesture.","The normalized y coord of the center on the gesture.","The normalized y coord of the center on the gesture.","The window was closed.","The cursor was entered in the window.","The window was exposed.","The window was focused.","The window lost focused.","The window became to be hidden.","The cursor was left from the window.","The window was maximized.","The window was minimized.","The windows was moved.","The window was resized by manually.","The window was restored from max/min.","The window became to be shown.","The window was resized by programmatically.","An event on interacting to the window.","The details what occurred in <code>WindowEvent</code>.","","","","","","","","","The kind of the event.","","","","","","","","","","When this event occurred.","","","","","","","","","The id of the window focused.","","","","A file handler, how to read and write from file on SDL2.","Returns the base path of your application.","","","","","","","Constructs from file name with the open mode, or <code>Err</code> on …","Constructs from the buffer <code>&amp;[u8]</code>, or <code>Err</code> on failure.","Constructs from the mutable buffer <code>&amp;mut [u8]</code>, or <code>Err</code> on …","","A file open mode for opening a file conveniently.","Returns the preferences path for your application.","Returns the raw pointer of the file handler.","","Reads and pops the big endian 16-bits value.","Reads and pops the big endian 32-bits value.","Reads and pops the big endian 64-bits value.","Reads and pops the little endian 16-bits value.","Reads and pops the little endian 32-bits value.","Reads and pops the little endian 64-bits value.","Reads and pops the 8-bits value.","","Returns the size of the read/write target.","Returns the current position of seeking.","","","","","Writes the big endian 16-bits value.","Writes the big endian 32-bits value.","Writes the big endian 64-bits value.","Writes the little endian 16-bits value.","Writes the little endian 32-bits value.","Writes the little endian 64-bits value.","Writes the 8-bits value.","A builder for an open mode of <code>super::RwOps</code>.","Sets to force to append. Setting true will disable to be …","Sets to be able to read as the binary mode. Setting false …","","","","","Sets to be able to create a new file.","","","","","Constructs an empty mode. Please do not pass this into …","Sets to be able to read.","Sets to be able to read as the text mode. Setting false …","","Sets to force to truncate, overwriting all of a file.","","","","Sets to force to write. Setting true will disable to be …","","A gamma ramp for a display.","","","","","","","","","","","Constructs a gamma ramp from the gamma value.","","","","","A straight line from point to point.","A point of the cartesian coordinate system.","A rectangle holding up left point and size.","A scale from the normal geometry.","A geometry size representation.","","","","","","","","","","","Returns the bottom y of the rect.","Returns the bottom left point of the rectangle.","Returns the bottom right point of the rectangle.","Returns the center point of the rectangle.","Clips the line with a rect.","","","","","","","","","","","","","","","","","Returns the enclosed rectangle of the points, with the …","A end point of the line.","","","","","","Creates a new rect that increased the bottom from the rect.","Creates a new rect that increased the left from the rect.","Creates a new rect that increased the right from the rect.","Creates a new rect that increased the top from the rect.","","","","","","","","","","","","","Constructs a rect from the bottom right.","Constructs a rect from the center.","Constructs a rect from x and y coordinates.","Returns whether two rectangles intersected.","A height of the geometry.","A horizontal scale, normalized.","Returns the intersection rectangle of two rectangles.","","","","","","Returns whether the rectangle is empty.","Returns whether the point is in the rectangle.","Returns the left x of the rect.","","","","","","Calculates the new point with the offset.","","","","","","Returns the right x of the rect.","A size of the rectangle.","A start point of the line.","","","","","","Returns the top y of the rect.","Returns the top right point of the rectangle.","","","","","","","","","","","","","","","","Returns the union of two rectangles.","A up left point of the rectangle.","A vertical scale, normalized.","A width of the geometry.","Creates a new rect from the rect with overwriting the new …","Creates a new rect from the rect with overwriting the new …","Creates a new rect from the rect with overwriting the new …","Creates a new rect from the rect with overwriting the new …","An x coordinate of the point.","An y coordinate of the point.","Vertical syncing but swap immediately on failed.","An extension for <code>GlContext</code> to add methods for control …","An extension for <code>Window</code> to set OpenGL context.","This flag is currently ignored on other targets that don’…","This flag is currently ignored on other targets that don’…","An OpenGL context controller.","A flag to control OpenGL context.","Always swap immediately.","A kind of the interval of swapping buffers in an OpenGL …","This flag is currently ignored on other targets that don’…","This flag is currently ignored on other targets that don’…","Vertical syncing.","Returns the set containing all flags.","Returns the internal pointer of the OpenGL context.","Configuration of an OpenGL context.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the size that can be used to draw.","","Returns an empty set of flags.","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Loads the library from <code>path</code>, or <code>Err</code> on failure.","","Constructs from a reference to <code>Window</code>, or <code>Err</code> on failure.","Returns the complement of this set of flags.","","Returns the raw address of the procedure.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets context to the window, or <code>Err</code> on failure.","Sets the interval mode of swapping buffers.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns whether the extension <code>name</code> is supported.","Swaps buffers immediately.","","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unloads all of loaded libraries.","Whether the renderer uses hardware acceleration or force …","The minimum bits of the alpha channel in an accumulation …","The minimum bits of the blue channel in an accumulation …","The minimum bits of the gree channel in an accumulation …","The minimum bits of the red channel in an accumulation …","The minimum bits of the alpha channel in a color buffer.","The minimum bits of the blue channel in a color buffer.","The minimum bits of the frame buffer.","The value of a <code>super::GlContextFlag</code>.","OpenGL context major version.","OpenGL context minor version.","Whether to disable all errors from OpenGL implementation. …","The type of OpenGL context such as Core, Compatibility, …","Setting what does on releasing OpenGL context. Can be set …","Whether to notify on reset the OpenGL context.","The bits of the depth buffer.","Whether the output is double buffered.","Whether to request sRGB capable visual.","The minimum bits of the gree channel in a color buffer.","An attrubte of the OpenGL context.","An attribute for OpenGL.","The number of buffers used for multi-sample anti-aliasing.","The number of samples used for multi-sample anti-aliasing.","The minimum bits of the red channel in a color buffer.","OpenGL context sharing.","The bits of the stencil buffer.","Whether the output is stereo 3D.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Gets the attribute value, or <code>Err</code> on failure.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Constructs an attribute from context and kind.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Sets the attribute value, or <code>Err</code> on failure.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Supported setting auto-center.","Supported a constant effect.","Supported a custom effect.","Supported setting the global gain.","A haptic device.","A property of the haptic device.","All of recognized haptic devices at initialized.","A haptic device got from the joystick.","Supported a left/right effect.","A haptic device got from the mouse.","Supported pausing the effect.","A haptic device but frozen not to interact.","An haptic effect but pending to play.","A playing haptic effect.","Supported a ramp effect.","Supported a downwards sawtooth wave periodic effect.","Supported an upwards sawtooth wave periodic effect.","Supported a sine wave periodic effect.","Supported querying the status of the effect.","Supported a triangle wave periodic effect.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","Drops the effect manually.","Drops the effect manually.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Defining directions and coordinate systems of the haptic …","","","","Controls the effect on the haptic device.","Returns the capacity of the effects on the haptic device.","Returns the maximum numbers of playing the effects at same …","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Returns the haptic devices.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns whether the effect is supported on the haptic …","Returns <code>true</code> if no flags are currently stored.","Returns the name of the haptic device.","","Constructs from a reference to <code>Joystick</code>.","Constructs and initializes the system and recognizes …","Constructs if the mouse had the haptic device.","Constructs the <code>PendingEffect</code> from the effect …","Returns the complement of this set of flags.","Returns the numbers of the axes on the haptic device.","","Pauses the haptic device and converts into <code>PausedHaptic</code>.","Queries a property on the haptic device.","Removes the specified flags in-place.","Rumbling the haptic device.","Starts to run the effect.","Inserts or removes the specified flags depending on the …","Sets auto-center. If not supported, this has no effects.","Sets the global gain. If not supported, this has no …","Stops playing the effect.","Stops all the playing effect.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unpauses the haptic device and converts into <code>Haptic</code>.","Updates the effect with a new effect, or <code>Err</code> on failure.","A cartesian coordinate system.","A direction and coordinate system of the haptic movements.","A polar coordinate system.","A spherical coordinate system (3-axis haptic device).","","","","","","","","","","","","","","","The direction in degrees times 100. The north is 0, the …","The degree times 100, rotating to (0, 0, 1) after above.","The east is positive direction.","The south is positive direction.","Z means the level of power if supported it.","The direction in degrees times 100, rotating from (1, 0, …","","","A condition to trigger the effect. Refer to <code>Direction</code> for …","Applies the force on fulfilled the condition.","Applies the constant force in the direction.","A custom periodic waveform by your sampled data.","Applies the force of the periodic waveform from your …","An envelope to fade in/out the effect. If both …","An effect on the haptic device.","Applies the left/right effect with two motors magnitude. …","A magnitude level of the force.","Applies the force of the periodic waveform.","Length and delay of the playing.","A linear ramp to interpolate the force of the effect.","Applies the force by linear ramp.","An upwards sawtooth wave like:","A sine wave like:","A downwards sawtooth wave like:","A triangle wave like:","A trigger button to start the effect, and an interval …","A vector to represent the XYZ component for <code>Condition</code>.","A periodic waveform specification.","A kind of the waveform.","The length of the level from <code>attack_level</code> to the effect …","The initial force level on applying.","","","","","","","","","","","","","","","","","","","","","","","The trigger button to start the effect","The position of the dead zone.","The numbers of using axes.","","","","","","","","","","","","","","","","","","","","","","","The sampled data. Its length must be equal to …","The size of the dead zone.","The delay of the playing.","The level at the end to play.","","","","","","","","","","","","The length of the level from the effect level to …","The end force level on applying.","","","","","","","","","","","","","","","","","","","","","","","","","The interval between the effect in milliseconds.","","","","","","","","","","","","The kind of the waveform.","The length of the playing in milliseconds.","The magnitude by peak-to-peak level of the waveform.","","","","","","","","","","","How fast to increase the force towards the negative side.","The level when the joystick in the negative side.","The amplifier offset, mean value of the waveform.","The period of the waveform.","The period of your sampled data.","The phase shift in degrees times 100.","How fast to increase the force towards the positive side.","The level when the joystick in the positive side.","The numbers of the samples in your data.","The level at the start to play.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The magnitude for the large motor.","The length of the playing in milliseconds.","The magnitude for the small motor.","A controller to rumble the haptic device.","","","","","","Constructs from a reference to <code>Haptic</code>, or <code>Err</code> on failure.","Starts to play a rumbling, or <code>Err</code> on failure.","Stops playing the rumbling, or <code>Err</code> on failure.","","","","A default priority, low.","A callback invoked on updated the hint.","An event on updated the hint.","An hint update observer.","A priority of the hint specifying.","A medium priority.","A higher priority.","","","","","","","Clears all the set hints.","","","","","","","","","","","","","","Returns the hint value of the key if exists.","Returns the boolean hint value of the key if exists.","","","","Constructs an observer to observe by the key and callback.","Sets the hint value of the key, or <code>Err</code> if does not exist.","Sets the hint value of the key with a priority, or <code>Err</code> if …","","","","","","","","","","","","A view in Metal API, made from a window.","","","Returns the drawable size of the view.","","","","Returns the raw pointer <code>CAMetalLayer</code> from the view.","Constructs a Metal view.","","","","Returns current counts of the high resolution counter.","Returns the numbers of counts per one seconds of the high …","It has a battery, completed to charge.","It has a battery, charging.","It has no batteries.","It has a battery, not charging.","A detail information of the system battery.","A state of power in the system.","A state cannot be known.","","","","","","","","","","","","","","","","","","","Returns a power information at now.","The remaining amount of battery in percent if available.","The remaining amount of battery in seconds if available.","The battery state of the system.","","","","","","","","","Flips both horizontal and vertical.","Flips horizontal.","Flip mode on pasting from another texture.","An option for <code>PasteExt::paste_ex</code>.","An extension for <code>Renderer</code> to paste from another texture.","A SDL2 renderer. This is often used for rendering with …","Flips vertical.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","The center point of pasting.","Clipping a renderer.","Clips the renderer by <code>area</code>.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Drivers of renderers.","","Returns an empty set of flags.","","","","The flip mode of pasting.","","","","","","","","Sets whether integer scaled is forced.","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Defining information structures of a renderer.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns whether integer scaled is forced.","Returns the logical size of the renderer if available.","","","Constructs a renderer from the window.","Returns the complement of this set of flags.","Returns the geometry size of the output from the renderer.","","Pastes the texture into <code>target_area</code>, or whole if <code>None</code>.","","Pastes the texture with options <code>PasteExOption</code>.","","Rendering geometries and setting colors.","Removes the specified flags in-place.","","The degrees of rotating another texture.","Returns the scale of th renderer.","Inserts or removes the specified flags depending on the …","Sets the logical size of the renderer.","Sets the scale of the renderer.","Sets the render target to the texture.","Resets the render target to the original window.","Sets the viewport rectangle of the renderer.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","The target area of pasting, or whole if <code>None</code>.","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the viewport rectangle of the renderer.","Returns the borrowing window.","A renderer that clipped from another renderer.","","","","","","","","","","Returns the list of render driver information.","GPU accelerated renderer, normally fast.","An information of a renderer.","An extension for <code>Renderer</code> to get <code>RendererInfo</code>.","A kind of renderer.","Software renderer, normally slow.","","","","","","","","","","","","","","","","","Whether vertical sync is enabled.","The kind of the renderer.","The max size of texture.","The name of the renderer.","Returns the information of the renderer.","The list of supported format kinds.","Whether texture is supported.","","","","","","","","","A pen controls its color and renders geometries to the …","Returns the current color blend mode.","","","Clears all the renderer area.","Returns the drawing color.","","Draw the filled rectangle.","Draw the filled rectangles.","","","","Draws the line.","Draws the lines.","Constructs a pen from the renderer <code>Renderer</code>.","Draw the point.","Draw the points.","Returns the renderer that the pen is drawing.","Sets the color blend mode.","Sets the drawing color.","Draw the rectangle only lines.","Draw the rectangles only lines.","","","","A screen saver that be enabled until dropped it.","","","","","","","Constructs and starts a screen saver.","","","","","A trait that provides flexible modification methods.","Alpha modification for a <code>Surface</code>.","Modifies the alpha of the surface.","Modifies the alpha of the surface.","Returns the raw non-null pointer.","Blending for a <code>Surface</code>.","Changes blend mode of the surface.","Changes blend mode of the surface.","Bitmap texture as a <code>Surface</code>.","","","","Clipping an area of a <code>Surface</code>.","Clips the surface by <code>area</code>.","Clips the surface by <code>area</code>.","","","Cloning a <code>Surface</code>.","Clones the surface.","Clones the surface.","Color modification for a <code>Surface</code>.","Modifies the color of the surface.","Modifies the color of the surface.","Copies <code>src_area</code> area in the surface into <code>dst_pos</code> on …","Copies <code>src_area</code> area in the surface into <code>dst_pos</code> on …","Fills in the <code>area</code> with the <code>color</code>, or whole if <code>area</code> is <code>None</code>.","Fills in the <code>area</code> with the <code>color</code>, or whole if <code>area</code> is <code>None</code>.","Fills in the <code>areas</code> with the <code>color</code>.","Fills in the <code>areas</code> with the <code>color</code>.","","","","","","","","","","Owned surface, created from raw pixel data.","","","","RLE (Run-Length Encoding) acceleration for a <code>Surface</code>.","Run-length encodes the surface.","Run-length encodes the surface.","Overwrites the palette of the surface.","Overwrites the palette of the surface.","","","","","","","A window treating as a <code>Surface</code>.","An alpha modified <code>Surface</code>.","Returns the alpha modification value.","","","","","","","","","","A blended <code>Surface</code>.","","Returns the blend mode.","","","","","","","","","","A bitmap texture as a <code>Surface</code>.","An error on saving as the bitmap texture.","An extension for a <code>Surface</code> to save the image as BMP format.","","","","","","","","","","","","","","","Constructs from the bitmap file name.","Saves the surface image as BMP format.","","","","","","","","A clipped <code>Surface</code> with an area.","Returns the clipped area.","","","","","","","","","","A cloned <code>Surface</code>.","","","","","","","","","","","A color modified <code>Surface</code>.","","","","Returns the color modification value.","","","","","","","An owned <code>Surface</code> with raw pixel data.","","","","","","","","Creates a new owned surface with its size and pixel format.","","","","A Run-length encoded <code>Surface</code>.","A locked RLE surface.","","","","","","","","","","","","","Locks the surface and Convert into <code>RleLock</code>.","Returns the raw pixels data.","Returns the raw pixels data for mutating.","","","","","","","A <code>Surface</code> made from the <code>Window</code>.","","","","","","","","","","Applies the surface into the original window.","Applies the surface into the original window area only …","System CPU information.","Returns the size of the system RAM.","Provides SIMD-friendly allocator from SDL2.","Returns the cache line size of the system CPU.","Counts the system CPU.","Returns whether the system CPU has 3DNow!.","Returns whether the system CPU has AltiVec.","Returns whether the system CPU has ARM SIMD.","Returns whether the system CPU has AVX.","Returns whether the system CPU has AVX2.","Returns whether the system CPU has AVX-512F.","Returns whether the system CPU has MMX.","Returns whether the system CPU has NEON, Advanced SIMD.","Returns whether the system CPU has RDTSC.","Returns whether the system CPU has SSE.","Returns whether the system CPU has SSE2.","Returns whether the system CPU has SSE3.","Returns whether the system CPU has SSE4.1.","Returns whether the system CPU has SSE4.2.","Returns the SIMD alignment of the system CPU.","Allocates memory in a SIMD-friendly way.","","","","","","","","","","An extension for <code>Texture</code> to query the texture information.","Cannot mutate and lock.","Can mutate and lock.","Can use as the render target in <code>Renderer</code>.","A texture used to draw the image to <code>Renderer</code>.","An access type for the texture.","Returns the access of the texture.","","Returns the alpha mod of the texture.","Binds the texture to the current OpenGL context. And …","","","","","Return the clip area of the texture if available.","Returns the color mod of the texture.","","","Returns the format of the texture.","","","","Constructs a texture from the <code>Surface</code>. The texture will be …","","","Locking the texture for read/write.","Obtains the lock for the texture in area, or whole if <code>None</code>.","Constructs a texture from the renderer with access type, …","Sets the alpha mod of the texture.","Sets the clip area.","Sets the color mod of the texture.","Returns the size of the texture.","","","","","","","","Unbinds the texture to the current OpenGL context, or <code>Err</code> …","A lock of the texture, ready to read/write as the raw …","Returns bytes of the pixels.","Returns mutable bytes of the pixels.","","","","","","","","","","A Vulkan instance from a window.","A Vulkan surface generated from SDL2.","Returns the raw pointer to the surface.","","","","","Returns the drawable region size.","Returns the names of the supported extensions.","","","","","","","Constructs a surface from instances, or <code>Err</code> on failure.","Constructs an instance from the window, or <code>Err</code> on failure.","","","","","","","An extension for <code>Window</code> to query border widths.","A border widths for the window.","A brightness in the window.","An extension for <code>Window</code> to get/set the brightness.","An extension for <code>Window</code> to configure its properties.","The cursor should be draggable.","A full screen window.","A full screen window on the current desktop.","A gamma ramps for a window.","An extension for <code>Window</code> to get/set the gamma ramp.","A gamma ramps for setting to a window.","A hit tester for a window.","A hit test result that determined cursor from the mouse …","A callback to hit test with the mouse position.","A maximized window.","Using Metal render context.","A minimized window.","An extension for <code>Window</code> to grab/ungrab the mouse.","The cursor should be normal.","A normal window.","An opacity of the window.","Using OpenGL render context.","A position of the window.","The cursor should be resizing on the bottom.","The cursor should be resizing on the bottom left.","The cursor should be resizing on the bottom right.","The cursor should be resizing on the left.","The cursor should be resizing on the right.","The cursor should be resizing on the top.","The cursor should be resizing on the top left.","The cursor should be resizing on the top right.","Using software render context.","Using Vulkan render context.","A window made by SDL2.","A builder for the <code>Window</code>.","A kind of a window’s context.","A coordinate value for the window position.","A format of a <code>super::Window</code>.","A state of a <code>super::Window</code>.","Adds a frame to the window.","","Whether the window allows high dpi.","Converts into <code>f32</code>.","Converts into <code>f32</code>","A gamma ramp of blue component.","A gamma ramp of blue component. It will not set if <code>None</code>.","Returns the border widths of the window.","","Whether the window is borderless.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A border width on the bottom.","Returns the brightness of the window.","","Create a builder for building <code>WindowBuilder</code>. On the …","Constructs the centered coordinate.","","","","","","","","","","","","","","","","","","","","","","","A kind of render context of the window.","Constructs from coord value. Must be in <code>-16384..=16384</code>.","Cursor control on a window.","","","Returns the display at the window, or <code>None</code> if unavailable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the window comes from the foreign.","A format of the window.","","","","","","","","","","","","","","","Gets a window from the window id, or <code>None</code> if does not …","Make the window full screen, or <code>Err</code> on failure.","Returns the gamma ramps of the window.","","Grabs the mouse.","","Gets a grabbed window, or <code>None</code> if does not exist.","A gamma ramp of green component.","A gamma ramp of green component. It will not set if <code>None</code>.","Whether the window is hidden.","Hides the window.","Returns the window id.","Whether the window is grabbed the input.","","","","","","","","","","","","","","","Returns whether the window is grabbing the mouse.","","Returns whether the window is showing the screen keyboard.","A border width on the left.","Returns the maximum size of the window.","","Maximizes the window.","Modal control for a window.","Returns the minimum size of the window.","","Minimizes the window.","Whether the window captures the mouse.","Gets a focused window, or <code>None</code> if does not exist.","","","","","","","","","Constructs from brightness, or <code>None</code> if the value is not in …","Constructs from opacity, or <code>None</code> if the value is not in …","Constructs a hit test from the window and a callback.","Builds the window.","Whether the window is on focus.","Whether the window is on the mouse.","Returns the opacity of the window.","","","","Returns the pixel format of the window context.","Returns the position of the window.","","Raises the window.","A gamma ramp of red component.","A gamma ramp of red component. It will not set if <code>None</code>.","Removes a frame from the window.","","Whether the window is resizable.","Restores the window from maximization/minimization.","A border width on the right.","Sets the brightness of the Window. Returns <code>Err</code> on failure.","","","Sets the gamma ramps of the window. Returns <code>Err</code> on failure.","","Sets an icon from a surface for the window.","Sets the maximum size of the window.","","Sets the minimum size of the window.","","Sets the opacity of the window.","","Sets the position of the window.","","Sets whether the window is resizable.","","Sets the current size of the window.","","Sets the title of the window.","","Shows the window.","Returns the current size of the window.","","Returns the state of the window.","Makes the window surface.","Returns the title of the window.","","","","","","","","","","","","","A border width on the top.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs the undefined coordinate.","Ungrabs the mouse.","","Constructs from brightness, clamping to <code>0.0,,=1.0</code>.","Constructs from opacity, clamping to <code>0.0,,=1.0</code>.","The x coordinate of the window.","The y coordinate of the window.","The arrow cursor.","The crosshair cursor.","A system cursor controller.","The hand cursor.","The I beam cursor.","The prohibiting cursor.","The resizing cursor for all directions.","The resizing cursor between north east and south west.","The resizing cursor between north and south.","The resizing cursor between north west and south east.","The resizing cursor between east and west.","A kind of the system cursor.","The waiting cursor.","The waiting cursor with arrow.","","","","","","","Constructs a colored cursor from surface and hot spot …","Constructs a completely customized color from data, mask …","Constructs a default cursor, or <code>None</code> if unavailable.","","","","","","","","","Redraws a cursor.","Sets the cursor to the current.","Constructs a system cursor from kind, or <code>Err</code> on failure.","","","","","","","","A button in a <code>super::MessageBox</code>.","An id type for a button.","A color scheme for a message box.","An error message.","An information message.","A message box builder.","A kind of <code>MessageBox</code>.","A warning message.","Adds a button to the message box.","A background color in the message box.","","","","","","","","","A background color in the message box button.","A border color in the message box button.","A selected color in the message box button.","Constructs a cancel button.","","","","","","","","","Sets the color scheme of the message box.","Constructs a confirm button.","","","","","","","","","","","","","","","","Sets the message of the message box.","","","Constructs a message box builder from the kind.","Constructs a normal button.","Shows the message box for a window. And returns the pushed …","A foreground text color in the message box.","Sets the title of the message box.","","","","","","","","","","","","","","","",""],"i":[1,2,2,0,0,0,0,0,0,0,2,0,1,1,0,3,4,5,2,6,1,3,4,5,2,6,1,0,2,6,1,2,6,1,1,0,5,3,0,0,5,3,4,5,6,1,3,3,0,0,4,2,2,6,1,3,4,5,2,6,6,1,0,0,0,0,5,0,3,4,5,2,6,1,6,0,6,6,1,3,4,5,1,1,6,0,3,0,0,5,3,3,0,1,0,0,0,2,6,1,2,3,4,5,2,6,1,3,4,5,2,6,1,3,4,5,2,6,1,3,5,0,0,7,0,0,0,0,0,0,8,9,10,8,9,11,10,8,9,11,0,11,11,11,0,0,8,11,0,8,9,11,0,11,10,8,9,11,12,8,9,10,8,9,11,12,11,8,9,0,11,11,0,0,12,0,11,10,8,9,11,10,8,9,11,10,8,9,11,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,15,16,15,16,15,16,0,0,17,17,17,17,18,17,17,17,17,17,17,17,17,18,17,18,17,18,17,18,17,17,17,17,17,17,18,17,18,18,18,17,17,17,17,17,18,17,18,18,17,17,17,17,17,17,17,17,17,18,17,17,17,18,17,17,17,17,18,18,18,18,18,17,17,17,17,18,17,17,18,17,18,17,18,17,18,18,18,0,0,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,19,20,19,20,19,20,19,20,0,0,0,21,21,21,0,21,21,21,21,21,21,21,21,21,22,23,21,22,23,21,23,21,21,21,21,21,21,22,21,21,21,22,21,21,21,21,21,22,23,21,21,21,21,21,21,21,21,21,22,23,21,21,21,21,22,21,21,21,21,21,21,21,21,21,22,23,21,22,23,21,22,23,21,21,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,0,28,28,0,0,29,30,29,30,29,28,30,29,28,30,29,28,30,29,28,30,29,30,29,28,30,29,28,30,30,29,29,28,28,30,29,30,29,28,30,29,30,29,0,30,29,30,29,28,30,29,28,30,29,28,30,29,28,31,32,0,0,0,0,32,33,34,34,33,31,32,34,33,31,32,34,33,31,33,31,33,34,33,31,34,33,31,32,34,33,31,32,34,33,31,32,0,34,0,33,31,34,0,0,33,34,34,34,34,34,34,33,31,34,33,31,32,34,33,31,32,0,34,33,31,32,35,36,36,36,36,37,37,0,37,37,0,37,38,38,37,38,37,38,38,37,37,38,37,38,37,38,37,38,37,38,37,38,37,37,37,38,37,38,37,38,39,40,41,40,42,41,40,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,45,44,45,0,45,44,45,44,0,0,45,44,45,44,44,44,46,46,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,46,44,44,45,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,0,47,47,47,47,47,47,47,47,47,47,47,47,0,0,48,48,49,49,49,0,48,48,48,50,50,50,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,0,0,0,51,52,53,51,52,53,51,52,53,52,53,51,53,51,53,51,52,53,51,52,53,53,52,51,52,53,51,51,53,51,52,52,52,53,51,52,53,51,52,53,51,52,53,51,53,52,0,0,0,54,54,0,54,54,0,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,54,54,0,0,0,54,54,54,54,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,58,57,58,59,60,57,58,59,60,0,0,61,61,0,62,62,62,61,62,61,0,61,61,61,0,62,61,62,61,62,61,0,62,62,61,62,61,62,61,62,61,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,0,65,0,64,65,64,64,64,65,64,64,64,64,65,65,64,65,64,65,64,65,64,65,64,65,64,64,65,64,64,65,64,65,64,64,65,64,64,65,64,64,65,64,65,64,65,64,66,67,68,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,70,69,70,71,72,70,73,69,70,73,71,72,69,74,74,74,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,75,76,77,77,0,0,0,0,78,0,78,79,80,78,81,79,80,78,81,0,78,78,79,80,78,79,80,78,81,78,81,78,79,80,78,0,79,80,78,81,79,80,78,78,81,78,0,78,0,78,78,78,79,80,78,81,78,78,79,80,78,81,0,78,79,80,78,0,78,78,79,80,78,81,79,80,78,81,79,80,78,81,82,0,0,83,82,83,82,83,82,83,82,83,82,83,83,82,83,82,83,82,84,0,0,85,84,85,84,85,84,85,84,85,84,85,85,84,85,84,85,84,86,86,86,86,86,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,88,89,87,90,88,89,91,88,92,87,90,88,89,92,91,90,87,89,90,90,0,0,93,94,93,94,93,94,93,94,94,93,93,94,94,93,93,94,93,93,94,93,94,93,94,93,94,93,94,93,94,93,94,95,96,96,0,0,96,96,96,0,96,96,96,96,96,96,96,96,96,96,96,96,96,97,95,96,97,95,96,96,96,96,96,96,96,96,96,96,96,96,96,96,97,95,96,97,95,96,96,96,96,96,96,96,96,96,97,95,96,96,96,96,96,96,96,97,96,96,96,96,96,96,97,95,96,97,95,96,97,95,96,98,98,98,98,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,0,0,100,99,100,99,100,100,99,100,99,100,99,100,99,100,99,100,99,0,0,101,102,101,102,101,102,101,102,101,102,101,102,101,101,102,102,101,102,102,102,0,101,0,101,101,102,0,101,102,102,101,102,101,102,101,102,101,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,106,107,107,106,0,0,0,0,0,107,106,107,107,107,106,108,109,110,107,106,108,109,110,108,109,109,107,106,108,109,110,107,106,108,109,110,0,107,106,108,109,110,107,106,108,109,110,107,106,108,108,109,109,110,110,107,106,108,109,110,110,109,108,109,110,108,106,108,109,110,108,109,0,110,108,109,110,107,106,108,109,110,107,106,108,109,110,107,106,108,109,110,107,106,108,109,110,108,109,110,111,112,113,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,115,115,115,115,115,115,115,115,115,115,116,116,116,0,0,0,117,116,118,117,116,118,116,116,117,118,118,117,116,118,117,116,118,117,116,118,117,117,118,118,116,117,116,118,117,116,118,117,116,118,119,0,0,0,120,121,122,120,121,122,121,122,121,122,120,120,121,122,120,121,121,122,122,120,121,122,122,120,122,121,122,121,122,121,122,120,121,122,120,121,122,120,121,122,121,122,0,0,123,124,123,124,123,123,123,124,123,124,123,0,124,124,123,123,124,123,123,123,124,123,124,123,124,123,124,124,125,125,0,0,125,126,125,126,125,126,125,126,125,126,125,126,125,125,125,126,125,126,126,126,125,126,125,126,125,126,125,127,127,128,128,129,127,128,127,128,128,129,127,128,127,128,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,130,131,130,131,130,131,130,131,131,130,130,131,130,131,131,130,131,130,131,130,131,130,131,130,131,130,131,131,132,133,134,0,0,135,135,135,135,135,135,135,135,135,135,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,137,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,0,0,0,0,138,139,140,141,142,138,139,140,141,142,138,138,138,138,142,138,139,140,141,142,138,139,140,141,142,138,139,140,142,139,141,138,142,138,139,140,141,142,138,138,138,138,138,139,140,141,142,138,138,139,139,140,141,142,138,138,138,138,140,141,138,138,139,140,141,142,138,139,138,138,139,140,141,142,139,138,139,140,141,142,138,138,142,138,139,140,141,142,138,138,138,139,140,141,142,138,139,140,141,142,138,139,140,141,142,138,138,141,140,138,138,138,138,139,139,143,0,0,144,144,0,0,143,0,144,144,143,144,145,0,144,144,144,144,144,144,144,145,143,144,145,143,144,143,144,143,144,144,144,144,144,145,145,144,143,144,144,145,143,144,144,144,144,144,145,143,144,144,144,144,144,144,144,144,144,145,143,144,144,144,145,144,145,144,144,145,144,144,146,147,145,144,144,145,147,145,144,143,144,144,145,143,144,145,143,144,145,143,144,144,145,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,0,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,149,148,149,148,148,148,148,148,148,148,148,148,148,149,148,148,148,148,148,149,148,148,148,148,148,149,148,148,148,148,149,148,148,148,148,149,148,148,148,149,148,148,148,148,148,148,149,148,149,148,149,148,148,150,150,150,150,0,0,0,0,150,0,150,0,0,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,151,152,153,154,155,156,157,150,151,152,153,154,155,156,157,150,150,150,150,150,150,154,151,155,156,157,150,0,151,154,155,0,152,152,150,150,150,151,152,155,156,157,150,150,150,150,150,151,152,153,154,155,156,157,150,150,150,150,150,154,150,150,150,150,151,152,153,154,155,156,157,150,150,152,150,152,150,151,154,155,152,150,152,150,152,152,150,0,156,150,152,152,157,152,150,150,150,150,150,151,152,153,154,155,156,157,150,151,152,153,154,155,156,157,150,151,152,153,154,155,156,157,150,150,153,156,158,0,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,159,160,161,161,161,160,162,163,0,164,164,0,164,0,0,164,0,164,0,0,164,165,165,165,165,0,0,0,0,166,166,164,167,168,162,166,169,165,163,170,171,172,164,167,168,162,166,169,165,163,170,171,172,168,170,172,164,167,168,162,166,169,165,163,170,171,172,164,167,168,162,166,169,165,163,170,171,172,172,170,167,171,164,167,168,162,166,169,165,163,170,171,172,166,166,164,167,168,162,166,169,165,163,170,171,172,164,164,167,168,162,166,169,165,165,163,170,171,172,168,164,167,168,162,166,169,165,163,170,171,172,169,167,169,164,167,168,162,166,169,163,170,171,172,170,170,169,169,172,169,170,170,172,171,164,167,168,162,166,169,165,163,170,171,172,164,167,168,162,166,169,165,163,170,171,172,164,167,168,162,166,169,165,163,170,171,172,164,167,168,162,166,169,165,163,170,171,172,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,176,177,173,174,176,177,178,178,178,0,179,179,179,179,179,179,179,179,179,179,179,180,0,0,0,0,180,180,181,182,180,181,182,180,0,182,180,182,180,180,181,180,181,182,180,181,182,180,0,0,181,182,180,181,0,0,182,180,181,182,180,181,182,180,181,182,180,0,183,183,183,183,183,183,183,183,183,183,183,0,0,184,184,184,184,0,0,184,184,185,184,185,184,185,184,185,184,185,184,185,184,184,185,184,185,185,185,185,185,185,184,185,184,185,184,185,184,185,186,186,0,0,0,0,186,186,186,186,186,186,186,186,186,187,186,188,187,186,188,188,0,187,186,188,186,188,186,186,186,186,188,186,0,187,186,186,188,186,188,187,186,186,186,186,186,188,187,187,186,188,186,186,186,186,186,0,186,186,186,187,186,188,186,186,187,187,186,188,187,186,187,186,189,187,189,187,0,186,187,188,187,186,187,187,187,187,187,186,186,186,188,186,188,186,187,186,188,187,186,188,187,186,188,186,187,187,0,190,190,190,190,190,190,190,190,190,0,191,0,0,0,191,191,192,191,192,191,192,191,192,191,191,192,191,192,192,191,192,192,192,192,192,193,192,192,191,192,191,192,191,192,191,192,0,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,0,195,195,195,195,195,195,195,195,195,195,0,0,0,196,196,196,0,196,196,0,197,197,197,0,196,196,197,197,0,196,196,0,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,0,197,197,197,0,196,196,196,196,197,197,197,197,197,197,0,0,198,198,198,198,198,198,198,198,198,198,0,199,199,199,199,199,199,199,199,199,199,200,0,0,0,201,201,200,201,200,200,200,201,201,200,201,200,201,200,201,202,200,201,200,201,200,201,200,0,203,203,203,203,203,203,203,203,203,203,0,204,204,204,204,204,204,204,204,204,204,0,205,205,205,205,205,205,205,205,205,205,0,206,206,206,206,206,206,206,206,206,206,206,0,0,207,208,207,208,207,207,208,207,208,207,208,207,208,207,207,208,207,208,207,208,207,0,209,209,209,209,209,209,209,209,209,209,209,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,210,210,210,210,210,210,210,210,0,211,211,211,0,0,212,213,213,213,211,213,211,213,213,213,213,213,212,213,211,213,213,211,213,0,213,213,213,213,213,212,213,211,213,211,213,211,213,213,0,214,214,214,214,214,214,214,214,214,214,214,0,0,215,215,216,215,216,216,216,215,216,215,216,215,216,215,216,215,216,215,216,215,216,0,0,0,0,0,217,218,218,0,0,0,0,0,0,218,219,218,0,217,218,0,219,0,217,217,217,217,217,217,217,217,219,219,0,0,0,0,0,0,220,221,222,223,224,225,226,227,221,222,221,228,223,225,226,229,230,231,224,217,232,218,219,222,221,228,223,225,226,229,230,231,224,217,232,218,219,222,228,233,221,230,229,228,223,225,226,229,231,224,217,218,219,222,228,223,225,226,229,231,224,217,218,219,222,222,229,0,225,226,221,221,232,228,223,225,226,229,231,224,217,218,219,222,221,228,223,225,226,229,230,231,224,217,232,218,219,222,222,222,221,228,223,225,226,229,230,231,224,217,232,218,219,222,221,221,234,221,235,221,221,225,226,222,221,221,222,221,228,223,225,226,229,230,231,224,217,232,218,219,222,235,221,221,228,220,221,221,0,220,221,221,222,221,228,223,225,226,229,231,224,222,223,224,232,230,222,222,220,221,223,224,221,220,221,221,225,226,220,221,222,221,228,233,221,221,234,221,221,220,221,220,221,220,221,220,221,220,221,220,221,220,221,221,220,221,221,221,220,221,228,223,225,226,229,231,224,217,218,219,222,228,221,228,223,225,226,229,230,231,224,217,232,218,219,222,221,228,223,225,226,229,230,231,224,217,232,218,219,222,221,228,223,225,226,229,230,231,224,217,232,218,219,222,229,235,221,223,224,231,231,236,236,0,236,236,236,236,236,236,236,236,0,236,236,237,236,237,236,236,236,237,237,237,237,236,237,236,237,236,237,236,237,237,237,236,237,236,237,236,237,236,0,0,0,238,238,0,0,238,239,240,241,240,238,239,241,240,238,239,240,240,240,241,241,240,238,239,241,240,238,239,239,241,241,240,238,241,240,238,239,241,240,238,239,241,240,238,239,239,241,240,239,241,239,240,239,241,240,238,239,241,240,238,239,241,240,238,239,241,240,238,239],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["ticks",3]]],[[["u32",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["sdlerror",4]],[[],["sdlversion",3]],[[],["ticks",3]],[[]],[[]],[[]],[[["ticks",3]],["ordering",4]],null,[[],["str",15]],[[]],[[["u32",15]]],null,[[],[["vec",3,["display"]],["display",3]]],[[]],[[]],[[]],[[["sdlversion",3]],["bool",15]],[[["ticks",3]],["bool",15]],[[],["string",3]],[[["str",15]],["never",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["sdl_version",3]]],[[]],[[]],null,null,null,null,[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["sdlversion",3]],["bool",15]],[[["ticks",3]],["bool",15]],[[]],[[["u32",15],["timercallback",6]],["result",6]],[[["sdl",3]]],[[["sdl",3]]],[[["ticks",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[],["str",15]],null,null,[[]],[[],["u32",15]],[[],["str",15]],null,[[]],null,null,null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["sdlversion",3]],[[],[["str",15],["vec",3,["str"]]]],null,null,null,null,null,null,null,null,[[],[["string",3],["vec",3,["string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["audiodeviceproperty",3]],[[]],[[],[["string",3],["option",4,["string"]]]],[[["u32",15],["bool",15]],[["string",3],["option",4,["string"]]]],[[]],[[["audiodeviceproperty",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["audiodevicelock",3]],[[["audiodeviceproperty",3]],["bool",15]],[[["string",3],["audiospec",3],["option",4,["string"]],["fallbackflag",3]],["result",6]],[[["string",3],["audiospec",3],["option",4,["string"]],["fallbackflag",3]],["result",6]],null,null,null,null,null,[[],["audiostatus",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[],["u8",15]],[[],["audiobuffer",3]],[[]],[[["audioformat",3],["u8",15],["u32",15]],[["audiobuffer",3],["result",6,["audiobuffer"]]]],[[["audiobuffer",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["audioformat",3]],[[]],[[]],[[["u8",15]]],[[["u8",15]]],[[["u8",15],["u32",15],["vec",3],["audioformat",3]]],[[],["u32",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["audiodeviceevent",4]],[[]],[[["formatter",3]],["result",6]],[[["sdl_audiodeviceevent",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[["audioformatflag",3]]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["audioformatflag",3]],[[],["audioformat",3]],[[]],[[]],[[["audioformatflag",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["audioformatflag",3]],["bool",15]],[[["audioformat",3]],["bool",15]],[[["intoiterator",8]]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u16",15]]],[[["u8",15]],["option",4]],[[["u8",15]]],[[["u8",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["audioformatflag",3]],["bool",15]],[[["audioformat",3]],["bool",15]],[[]],[[["audioformatflag",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["speakerdevice",3]]],[[["microphonedevice",3]]],[[],["result",6]],[[],["usize",15]],[[],[["usize",15],["result",6,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["fallbackflag",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["audiospecbuilderbuilder",3]],[[],["fallbackflag",3]],[[]],[[["fallbackflag",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[["fallbackflag",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["fallbackflag",3]],["bool",15]],[[["audiospecbuilder",3]]],[[]],[[["fallbackflag",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[],["audiostatus",4]],[[]],[[["audiostatus",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["sdl_audiostatus",6]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["audiobuffer",3],["audiobuffer",3]],["result",6]],[[],[["usize",15],["result",6,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["usize",15],["result",6,["usize"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",6]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[["clipboardtext",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["string",3]],[[["clipboardtext",3]],["bool",15]],[[],["option",4]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["rgb",3]],[[],["rgba",3]],[[],["blendmode",4]],[[]],[[]],[[]],[[["rgb",3]],["ordering",4]],[[["rgba",3]],["ordering",4]],[[["rgb",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["blendmode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["sdl_blendmode",6]]],[[]],null,null,[[]],[[]],[[]],[[["rgb",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["rgb",3]],[["option",4,["ordering"]],["ordering",4]]],[[["rgba",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["u32",15]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["pixel",3]],[[],["pixelmask",3]],[[]],[[]],[[["pixel",3]],["ordering",4]],[[]],[[["pixel",3]],["bool",15]],[[["pixelmask",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["pixelformatkind",4]],null,[[["pixel",3]],["bool",15]],[[["pixelmask",3]],["bool",15]],[[["pixelformatkind",4]],["result",6]],null,null,[[["pixel",3]],[["option",4,["ordering"]],["ordering",4]]],[[["rgb",3]],["pixel",3]],[[["rgba",3]],["pixel",3]],[[],["pixelformatproperty",4]],[[["pixel",3]],["rgb",3]],[[["pixel",3]],["rgba",3]],[[["palette",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["pixelformatkind",4]],[[]],[[],["bppmask",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["bppmask",3]]],null,[[]],[[]],[[],["str",15]],null,[[],[["bppmask",3],["option",4,["bppmask"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["packedpixellayout",4]],[[]],[[["formatter",3]],["result",6]],[[["sdl_pixelformatenum",6]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["bitmappixelorder",4]],[[],["packedpixelorder",4]],[[],["arraypixelorder",4]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["sdl_pixelformatenum",6]]],[[]],[[]],[[["sdl_pixelformatenum",6]]],[[["sdl_pixelformatenum",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15]],["result",6]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["bitmappixeltype",4]],[[],["packedpixeltype",4]],[[],["arraypixeltype",4]],[[]],[[]],[[]],[[["bitmappixeltype",4]],["bool",15]],[[["packedpixeltype",4]],["bool",15]],[[["arraypixeltype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["rect",3],["option",4,["rect"]]]],[[],["mode",3]],[[],["dpi",3]],[[]],[[]],[[],["mode",3]],null,[[],[["option",4,["dpi"]],["dpi",3]]],[[["dpi",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[],[["mode",3],["vec",3,["mode"]]]],[[],["str",15]],[[["dpi",3]],["bool",15]],[[],["mode",3]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["rect",3],["option",4,["rect"]]]],null,null,null,null,null,[[]],[[]],null,[[]],[[]],null,[[["eventhandler",6,["audiodeviceevent"]],["audiodeviceevent",4]]],[[["controllerevent",4],["eventhandler",6,["controllerevent"]]]],[[["eventhandler",6,["dropevent"]],["dropevent",4]]],[[["texteditingevent",3],["eventhandler",6,["texteditingevent"]]]],[[["eventhandler",6,["gestureevent"]],["gestureevent",4]]],[[["eventhandler",6,["textinputevent"]],["textinputevent",3]]],[[["joystickevent",4],["eventhandler",6,["joystickevent"]]]],[[["keyboardevent",3],["eventhandler",6,["keyboardevent"]]]],[[["eventhandler",6,["mouseevent"]],["mouseevent",4]]],[[["eventhandler",6,["quitevent"]],["quitevent",3]]],[[["eventhandler",6,["windowevent"]],["windowevent",3]]],[[]],null,null,null,[[["video",3]]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u32",15]]],null,null,[[]],[[]],[[],["quitevent",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[["sdl_quitevent",3]]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[],["dropevent",4]],[[]],[[["formatter",3]],["result",6]],[[["sdl_dropevent",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["result",6,["bool"]],["bool",15]]],[[["str",15]],[["result",6,["u32"]],["u32",15]]],null,[[["axis",4]],[["option",4,["mapinput"]],["mapinput",4]]],[[["button",4]],[["option",4,["mapinput"]],["mapinput",4]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["string",3]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["axis",4]],[[]],[[["axis",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["result",4]],[[]],[[]],[[["axis",4]],[["option",4,["ordering"]],["ordering",4]]],[[],[["string",3],["option",4,["string"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["fourbutton",4]],[[],["button",4]],[[]],[[]],[[["fourbutton",4]],["bool",15]],[[["button",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[["button",4]],["bool",15]],[[["fourbutton",4]],[["option",4,["ordering"]],["ordering",4]]],[[["button",4]],[["option",4,["ordering"]],["ordering",4]]],[[],[["string",3],["option",4,["string"]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["controllerevent",4]],[[]],[[["formatter",3]],["result",6]],[[["sdl_controlleraxisevent",3]]],[[]],[[["sdl_controllerdeviceevent",3]]],[[["sdl_controllerbuttonevent",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["mapinput",4]],[[]],[[["mapinput",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["sdl_gamecontrollerbuttonbind",3]]],[[]],[[]],[[["mapinput",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],["axes",3]],null,[[["inputindex",3]],[["option",4,["axis"]],["axis",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["inputindex",3]],[["button",3],["option",4,["button"]]]],[[],["buttons",3]],[[],["inputindex",3]],[[],["joystickid",3]],[[],["joystick",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["inputindex",3]],["bool",15]],[[["joystickid",3]],["bool",15]],[[["joystick",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["gamecontroller",3]]],[[]],[[["joystickid",3]],["option",4]],null,[[],["guid",3]],null,[[["inputindex",3]],[["option",4,["hat"]],["hat",3]]],[[],["hats",3]],[[],["joystickid",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],[["cow",4,["str"]],["str",15]]],[[["inputindex",3]],["bool",15]],[[["joystickid",3]],["bool",15]],[[["joystick",3]],["bool",15]],[[]],null,[[],["powerlevel",4]],[[]],[[]],[[]],null,[[["inputindex",3]],[["option",4,["trackball"]],["trackball",3]]],[[],["trackballs",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["i16",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["sdl_joydeviceevent",3]]],[[["sdl_joyballevent",3]]],[[["sdl_joyhatevent",3]]],[[["sdl_joybuttonevent",3]]],[[["sdl_joyaxisevent",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["guid",3]],[[],["invalidlengtherror",3]],[[]],[[]],[[["invalidlengtherror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["sdl_joystickguid",3]]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[]],[[],["string",3]],[[["invalidlengtherror",3]],["bool",15]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["povhat",3]]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["povhat",3]],[[]],[[["povhat",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["povhat",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u8",15]],["option",4]],[[["u8",15]]],[[["u8",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["povhat",3]],["bool",15]],[[]],[[["povhat",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["bool",15]]],[[],["povhat",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[],["powerlevel",4]],[[]],[[["formatter",3]],["result",6]],[[["sdl_joystickpowerlevel",6]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["point",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[],["keysymbol",3]],[[],["keyboardevent",3]],[[]],[[]],[[["keysymbol",3]],["bool",15]],[[["keyboardevent",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["sdl_keysym",3]]],[[]],[[["sdl_keyboardevent",3]]],[[]],[[]],[[]],null,null,null,null,null,null,[[["keysymbol",3]],["bool",15]],[[["keyboardevent",3]],["bool",15]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["keycode",4]],[[]],[[["keycode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["scancode",4]]],[[["sdl_keycode",6]]],[[["str",15]]],[[]],[[],[["string",3],["option",4,["string"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["keymod",3]]],[[]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[],["keymod",3]],[[]],[[["keymod",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[["keymod",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u16",15]],["option",4]],[[["u16",15]]],[[["u16",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[["keymod",3]],["bool",15]],[[]],[[["keymod",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["scancode",4]],[[]],[[["scancode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["keycode",4]]],[[]],[[["sdl_scancode",6]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["mousebutton",4]],[[],["mouseevent",4]],[[],["mousemotionevent",3]],[[],["mousebuttonevent",3]],[[],["mousewheelevent",3]],[[]],[[]],[[]],[[]],[[]],null,[[["mousebutton",4]],["bool",15]],[[["mouseevent",4]],["bool",15]],[[["mousemotionevent",3]],["bool",15]],[[["mousebuttonevent",3]],["bool",15]],[[["mousewheelevent",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["sdl_mousemotionevent",3]]],[[]],[[["sdl_mousebuttonevent",3]]],[[]],[[["sdl_mousewheelevent",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["mouseevent",4]],["bool",15]],[[["mousemotionevent",3]],["bool",15]],[[["mousebuttonevent",3]],["bool",15]],[[["mousewheelevent",3]],["bool",15]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["cursor",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["bool",15]],[[["window",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["video",3]],[["result",4,["sdlerror"]],["sdlerror",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["sensorkind",4]],[[]],[[["usize",15]],[["f32",15],["vec",3,["f32"]]]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sensorkind",4]],[[],["str",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["textinputevent",3]],[[],["texteditingevent",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["sdl_textinputevent",3]]],[[["sdl_texteditingevent",3]]],[[]],[[]],[[]],[[]],null,[[["rect",3],["video",3]]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[],["vec",3]],[[]],[[]],[[]],[[]],[[],["touchdevice",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["i64",15]],[[]],[[]],[[["rwops",3]],[["usize",15],["result",6,["usize"]]]],[[],["f32",15]],[[],["bool",15]],[[]],[[],[["vec",3,["touchfinger"]],["touchfinger",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["f32",15]],[[],["f32",15]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["gesture",3]],[[],["gestureevent",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["sdl_multigestureevent",3]]],[[["sdl_dollargestureevent",3]]],[[]],[[]],[[["rwops",3]],[["usize",15],["result",6,["usize"]]]],[[["rwops",3]],[["usize",15],["result",6,["usize"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["windoweventdetails",4]],[[],["windowevent",3]],[[]],[[]],null,[[["windoweventdetails",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["sdl_windowevent",3]]],[[]],[[]],[[["windoweventdetails",4]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[],["string",3]],[[]],[[]],[[]],[[],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15],["openmode",3]],[["rwops",3],["result",6,["rwops"]]]],[[],["result",6]],[[],["result",6]],[[]],null,[[["str",15]],["string",3]],[[],[["sdl_rwops",3],["nonnull",3,["sdl_rwops"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u8",15]],[[["seekfrom",4]],[["u64",15],["result",6,["u64"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["u64",15],["result",6,["u64"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["usize",15],["result",6,["usize"]]]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],[[["u8",15]],["bool",15]],null,[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[],["openmode",3]],[[]],[[["bool",15]]],[[],["openmode",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[]],[[["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["bool",15]]],null,null,[[]],[[]],[[],["gammaramp",3]],[[]],[[]],[[["gammaramp",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["gammaramp",3]],["bool",15]],[[["f32",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[["rect",3]]],[[],["rect",3]],[[],["point",3]],[[],["size",3]],[[],["scale",3]],[[],["line",3]],[[]],[[]],[[]],[[]],[[]],[[["rect",3]],["ordering",4]],[[["point",3]],["ordering",4]],[[["size",3]],["ordering",4]],[[["line",3]],["ordering",4]],[[],["point",3]],[[]],[[["rect",3],["option",4,["rect"]]],["option",4]],null,[[["rect",3]],["bool",15]],[[["point",3]],["bool",15]],[[["size",3]],["bool",15]],[[["scale",3]],["bool",15]],[[["line",3]],["bool",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["sdl_rect",3]]],[[]],[[["sdl_point",3]]],[[]],[[]],[[]],[[["point",3],["size",3]]],[[["point",3],["size",3]]],[[]],[[],["bool",15]],null,null,[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["rect",3]],["bool",15]],[[],["i32",15]],[[["rect",3]],["bool",15]],[[["point",3]],["bool",15]],[[["size",3]],["bool",15]],[[["scale",3]],["bool",15]],[[["line",3]],["bool",15]],[[["i32",15]]],[[["rect",3]],[["option",4,["ordering"]],["ordering",4]]],[[["point",3]],[["option",4,["ordering"]],["ordering",4]]],[[["size",3]],[["option",4,["ordering"]],["ordering",4]]],[[["scale",3]],[["option",4,["ordering"]],["ordering",4]]],[[["line",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["i32",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["point",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[]],[[]],[[["glcontextflag",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intervalkind",4]],[[],["glcontextflag",3]],[[]],[[]],[[["glcontextflag",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[],["size",3]],[[]],[[]],[[["intervalkind",4]],["bool",15]],[[["glcontextflag",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["result",6]],[[["glcontextflag",3]],["bool",15]],[[["window",3]],["option",4]],[[]],[[["glcontextflag",3]],[["option",4,["ordering"]],["ordering",4]]],[[["str",15]]],[[]],[[["bool",15]]],[[["glcontext",3]],["result",6]],[[["intervalkind",4]],["result",6]],[[["intervalkind",4]],["result",6]],[[]],[[]],[[["str",15]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["glattributekind",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["glattributekind",3]],[[]],[[["glattributekind",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["glattributekind",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[],[["i32",15],["result",6,["i32"]]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["glattributekind",3]],["bool",15]],[[["glcontext",3],["glattributekind",3]]],[[]],[[["glattributekind",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["i32",15]],["result",6]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["hapticproperty",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hapticproperty",3]],[[]],[[["hapticproperty",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[["hapticproperty",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["hapticeffect",4]],["bool",15]],[[],["bool",15]],[[],["string",3]],[[["hapticproperty",3]],["bool",15]],[[],["option",4]],[[]],[[],["option",4]],[[["hapticeffect",4]],[["pendingeffect",3],["result",6,["pendingeffect"]]]],[[]],[[],["u32",15]],[[["hapticproperty",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["pausedhaptic",3]],[[],["hapticproperty",3]],[[]],null,[[["option",4,["u32"]],["u32",15]],[["playingeffect",3],["result",6,["playingeffect"]]]],[[["bool",15]]],[[["u32",15]]],[[["u32",15]]],[[],[["result",6,["pendingeffect"]],["pendingeffect",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["haptic",3]],[[["hapticeffect",4]],["result",6]],null,null,null,null,[[]],[[]],[[],["direction",4]],[[]],[[["direction",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["sdl_hapticdirection",3]]],[[]],[[]],[[["direction",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["hapticeffect",4]],[[],["play",3]],[[],["trigger",3]],[[],["level",3]],[[],["envelope",3]],[[],["wave",3]],[[],["wavekind",4]],[[],["vector3",3]],[[],["condition",3]],[[],["ramp",3]],[[],["custom",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["hapticeffect",4]],["bool",15]],[[["play",3]],["bool",15]],[[["trigger",3]],["bool",15]],[[["level",3]],["bool",15]],[[["envelope",3]],["bool",15]],[[["wave",3]],["bool",15]],[[["wavekind",4]],["bool",15]],[[["vector3",3]],["bool",15]],[[["condition",3]],["bool",15]],[[["ramp",3]],["bool",15]],[[["custom",3]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["sdl_hapticeffect",19]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["hapticeffect",4]],["bool",15]],[[["play",3]],["bool",15]],[[["trigger",3]],["bool",15]],[[["level",3]],["bool",15]],[[["envelope",3]],["bool",15]],[[["wave",3]],["bool",15]],[[["vector3",3]],["bool",15]],[[["condition",3]],["bool",15]],[[["ramp",3]],["bool",15]],[[["custom",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["haptic",3]],["result",6]],[[["f32",15],["u32",15]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hintevent",3]],[[],["hintpriority",4]],[[]],[[]],[[]],[[]],[[["hintpriority",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],[["string",3],["option",4,["string"]]]],[[["str",15]],[["bool",15],["option",4,["bool"]]]],[[]],[[]],[[]],[[["str",15],["hintcallback",6]]],[[["str",15]],["result",6]],[[["str",15],["hintpriority",4]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[],["size",3]],[[]],[[]],[[]],[[]],[[["window",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[],["u64",15]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["powerstate",4]],[[],["powerinfo",3]],[[]],[[]],[[["powerstate",4]],["bool",15]],[[["powerinfo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["sdl_powerstate",6]]],[[]],[[]],[[]],[[]],[[["powerinfo",3]],["bool",15]],[[]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[["pasteexflip",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["rect",3]],["clippedrenderer",3]],[[],["pasteexflip",3]],[[],["pasteexoption",3]],[[]],[[]],[[["pasteexflip",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[],["pasteexoption",3]],[[]],null,[[]],[[]],[[["pasteexflip",3]],["bool",15]],[[["pasteexoption",3]],["bool",15]],[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["bool",15]]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],null,[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["size",3],["option",4,["size"]]]],[[["pasteexflip",3]],["bool",15]],[[["pasteexoption",3]],["bool",15]],[[["window",3]]],[[]],[[],["size",3]],[[["pasteexflip",3]],[["option",4,["ordering"]],["ordering",4]]],[[["texture",3],["rect",3],["option",4,["rect"]]]],[[["texture",3],["rect",3],["option",4,["rect"]]]],[[["texture",3],["pasteexoption",3]]],[[["texture",3],["pasteexoption",3]]],null,[[]],[[],["rendererinfo",3]],null,[[],["scale",3]],[[["bool",15]]],[[["size",3]]],[[["scale",3]]],[[["texture",3]]],[[]],[[["rect",3],["option",4,["rect"]]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["rect",3]],[[],["window",3]],null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["rendererinfo",3],["vec",3,["rendererinfo"]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["rendererkind",4]],[[],["rendererinfo",3]],[[]],[[]],[[["rendererkind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["sdl_rendererinfo",3]]],[[]],[[]],[[]],null,null,null,null,[[],["rendererinfo",3]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["blendmode",4]],[[]],[[]],[[]],[[],["rgb",3]],[[]],[[["rect",3]]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["line",3]]],[[]],[[["renderer",3]]],[[["point",3]]],[[]],[[],["renderer",3]],[[["blendmode",4]]],[[["rgb",3]]],[[["rect",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["video",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["u8",15]],["alphamod",3]],[[["u8",15]],["alphamod",3]],[[],[["rawsurface",3],["nonnull",3,["rawsurface"]]]],null,[[["blendmode",4]],["blended",3]],[[["blendmode",4]],["blended",3]],null,[[]],[[]],null,null,[[["rect",3]],["clipped",3]],[[["rect",3]],["clipped",3]],[[],["sdl_surface",3]],[[]],null,[[],["cloned",3]],[[],["cloned",3]],null,[[["rgb",3]],["colormod",3]],[[["rgb",3]],["colormod",3]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["option",4,["rect"]],["pixel",3]]],[[["rect",3],["option",4,["rect"]],["pixel",3]]],[[["pixel",3]]],[[["pixel",3]]],null,[[["formatter",3]],[["error",3],["result",4,["error"]]]],null,[[]],null,[[]],null,null,null,null,null,null,null,null,[[],["rle",3]],[[],["rle",3]],[[["palette",3]]],[[["palette",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[],["u8",15]],[[],[["nonnull",3,["rawsurface"]],["rawsurface",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],[["nonnull",3,["rawsurface"]],["rawsurface",3]]],[[],["blendmode",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[],[["rawsurface",3],["nonnull",3,["rawsurface"]]]],[[]],[[]],[[]],[[]],[[],["bmpsaveerror",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",6]],[[["str",15]],[["result",4,["bmpsaveerror"]],["bmpsaveerror",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["rect",3]],[[],[["nonnull",3,["rawsurface"]],["rawsurface",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],[["rawsurface",3],["nonnull",3,["rawsurface"]]]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],[["nonnull",3,["rawsurface"]],["rawsurface",3]]],[[]],[[]],[[],["rgb",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],[["nonnull",3,["rawsurface"]],["rawsurface",3]]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["size",3],["pixelformat",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[],[["nonnull",3,["sdl_surface"]],["sdl_surface",3]]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["rlelock",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],[["nonnull",3,["rawsurface"]],["rawsurface",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],[[],["result",6]],null,[[],["usize",15]],null,[[],["usize",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],null,[[["layout",3]],[["nonnull",3],["result",4,["nonnull","allocerror"]],["allocerror",3]]],[[]],[[]],[[["u8",15],["nonnull",3,["u8"]],["layout",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[],["textureaccess",4]],[[],["textureaccess",4]],[[],["u8",15]],[[],["result",6]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["rgb",3]],[[]],[[["formatter",3]],["result",6]],[[],["pixelformatkind",4]],[[],["pixelformatkind",4]],[[]],[[]],[[["renderer",3]]],[[]],[[]],null,[[["rect",3],["option",4,["rect"]]],["lock",3]],[[["textureaccess",4],["renderer",3]],["result",6]],[[["u8",15]],["result",6]],[[["rect",3],["option",4,["rect"]]]],[[["rgb",3]]],[[],["size",3]],[[],["size",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["size",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["instance",3],["vkinstance",3]],["result",6]],[[["window",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["f32",15]],[[],["f32",15]],null,null,[[],[["borderwidths",3],["result",6,["borderwidths"]]]],[[],[["borderwidths",3],["result",6,["borderwidths"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["brightness",3]],[[],["brightness",3]],[[],["windowbuilderbuilder",3]],[[]],[[],["borderwidths",3]],[[],["brightness",3]],[[],["gamma",3]],[[],["gammaparam",3]],[[],["windowcoord",3]],[[],["position",3]],[[],["opacity",3]],[[],["hittestresult",4]],[[],["windowformat",4]],[[],["windowcontextkind",4]],[[],["windowstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["i32",15]]],null,[[],["gamma",3]],[[],["gammaparam",3]],[[],[["display",3],["option",4,["display"]]]],[[]],[[]],[[["borderwidths",3]],["bool",15]],[[["brightness",3]],["bool",15]],[[["gamma",3]],["bool",15]],[[["gammaparam",3]],["bool",15]],[[["windowcoord",3]],["bool",15]],[[["position",3]],["bool",15]],[[["opacity",3]],["bool",15]],[[["hittestresult",4]],["bool",15]],[[["windowformat",4]],["bool",15]],[[["windowcontextkind",4]],["bool",15]],[[["windowstate",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["video",3]],["option",4]],[[],["result",6]],[[],[["gamma",3],["result",6,["gamma"]]]],[[],[["gamma",3],["result",6,["gamma"]]]],[[]],[[]],[[["video",3]],["option",4]],null,null,null,[[]],[[],["u32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["size",3]],[[],["size",3]],[[]],null,[[],["size",3]],[[],["size",3]],[[]],null,[[["video",3]],["option",4]],[[["borderwidths",3]],["bool",15]],[[["brightness",3]],["bool",15]],[[["gamma",3]],["bool",15]],[[["gammaparam",3]],["bool",15]],[[["windowcoord",3]],["bool",15]],[[["position",3]],["bool",15]],[[["opacity",3]],["bool",15]],[[["windowstate",3]],["bool",15]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["window",3],["hittester",6]],["result",6]],[[["video",3]],["window",3]],null,null,[[],["opacity",3]],[[],["opacity",3]],[[["brightness",3]],[["option",4,["ordering"]],["ordering",4]]],[[["opacity",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["pixelformatkind",4]],[[],["point",3]],[[],["point",3]],[[]],null,null,[[]],[[]],null,[[]],null,[[["brightness",3]],["result",6]],[[["brightness",3]],["result",6]],[[["glcontext",3]],["result",6]],[[["gammaparam",3]],["result",6]],[[["gammaparam",3]],["result",6]],[[]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["opacity",3]],["result",6]],[[["opacity",3]],["result",6]],[[["position",3]]],[[["position",3]]],[[["bool",15]]],[[["bool",15]]],[[["size",3]]],[[["size",3]]],[[["str",15]]],[[["str",15]]],[[]],[[],["size",3]],[[],["size",3]],[[],["windowstate",3]],[[],["windowsurface",3]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["f32",15]]],[[["f32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["systemcursorkind",4]],[[]],[[["window",3],["point",3]],["result",6]],[[["window",3],["point",3]],["result",6]],[[["window",3]],["option",4]],[[]],[[["systemcursorkind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["window",3],["systemcursorkind",4]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[["button",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["str",15],["buttonid",6]]],[[],["button",3]],[[],["colorscheme",3]],[[],["messageboxkind",4]],[[],["messagebox",3]],[[]],[[]],[[]],[[]],[[["colorscheme",3],["option",4,["colorscheme"]]]],[[["str",15],["buttonid",6]]],[[["button",3]],["bool",15]],[[["colorscheme",3]],["bool",15]],[[["messageboxkind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["button",3]],["bool",15]],[[["colorscheme",3]],["bool",15]],[[["messageboxkind",4]]],[[["str",15],["buttonid",6]]],[[["window",3]],[["result",6,["buttonid"]],["buttonid",6]]],null,[[["str",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Ticks"],[4,"SdlError"],[3,"Sdl"],[3,"Timer"],[3,"Video"],[3,"SdlVersion"],[13,"Others"],[3,"SpeakerDevice"],[3,"MicrophoneDevice"],[3,"AudioDeviceLock"],[3,"AudioDeviceProperty"],[8,"AudioDevice"],[3,"AudioBuffer"],[4,"AudioDeviceEvent"],[13,"Added"],[13,"Removed"],[3,"AudioFormatFlag"],[3,"AudioFormat"],[3,"QueuedAudio"],[3,"DequeueAudio"],[3,"FallbackFlag"],[3,"AudioSpec"],[3,"AudioSpecBuilder"],[4,"AudioStatus"],[3,"AudioStream"],[3,"Wav"],[3,"ClipboardText"],[4,"BlendMode"],[3,"Rgba"],[3,"Rgb"],[3,"PixelMask"],[4,"PixelFormatProperty"],[3,"Pixel"],[3,"PixelFormat"],[13,"Palette"],[13,"TrueColor"],[4,"PixelFormatKind"],[3,"BppMask"],[13,"FourCode"],[13,"Packed"],[13,"Bitmap"],[13,"Array"],[4,"PackedPixelLayout"],[4,"PackedPixelOrder"],[4,"ArrayPixelOrder"],[4,"BitmapPixelOrder"],[3,"Palette"],[4,"ArrayPixelType"],[4,"BitmapPixelType"],[4,"PackedPixelType"],[3,"Display"],[3,"Mode"],[3,"Dpi"],[3,"EventBox"],[3,"QuitEvent"],[4,"DropEvent"],[13,"File"],[13,"Text"],[13,"Begin"],[13,"Complete"],[3,"GameControllerSet"],[3,"GameController"],[4,"Axis"],[4,"Button"],[4,"FourButton"],[13,"LeftFour"],[13,"RightFour"],[4,"ControllerEvent"],[13,"Axis"],[13,"Button"],[13,"DeviceRemoved"],[13,"DeviceRemapped"],[13,"DeviceAdded"],[4,"MapInput"],[13,"Button"],[13,"Axis"],[13,"Hat"],[3,"Joystick"],[3,"InputIndex"],[3,"JoystickId"],[3,"JoystickSet"],[3,"Axes"],[3,"Axis"],[3,"Buttons"],[3,"Button"],[4,"JoystickEvent"],[13,"Axis"],[13,"Button"],[13,"Hat"],[13,"Trackball"],[13,"DeviceRemoved"],[13,"DeviceAdded"],[3,"Guid"],[3,"InvalidLengthError"],[3,"Hats"],[3,"PovHat"],[3,"Hat"],[4,"PowerLevel"],[3,"Trackballs"],[3,"Trackball"],[3,"KeySymbol"],[3,"KeyboardEvent"],[4,"KeyCode"],[3,"KeyMod"],[4,"ScanCode"],[4,"MouseEvent"],[4,"MouseButton"],[3,"MouseMotionEvent"],[3,"MouseButtonEvent"],[3,"MouseWheelEvent"],[13,"Motion"],[13,"Button"],[13,"Wheel"],[3,"Cursor"],[3,"RelativeMouse"],[4,"SensorKind"],[3,"Sensor"],[3,"SensorSet"],[13,"Others"],[3,"TextInput"],[3,"TextInputEvent"],[3,"TextEditingEvent"],[3,"TouchDevice"],[3,"TouchFinger"],[4,"GestureEvent"],[3,"Gesture"],[13,"Multi"],[13,"Dollar"],[13,"DollarRecord"],[4,"WindowEventDetails"],[3,"WindowEvent"],[13,"Moved"],[13,"Resized"],[13,"SizeChanged"],[3,"RwOps"],[3,"OpenMode"],[3,"GammaRamp"],[3,"Rect"],[3,"Point"],[3,"Size"],[3,"Scale"],[3,"Line"],[4,"IntervalKind"],[3,"GlContextFlag"],[3,"GlContext"],[8,"ContextSwitchExt"],[8,"BufferExt"],[3,"GlAttributeKind"],[3,"GlAttribute"],[3,"HapticProperty"],[3,"JoystickHaptic"],[3,"Haptic"],[3,"PausedHaptic"],[3,"HapticSet"],[3,"MouseHaptic"],[3,"PendingEffect"],[3,"PlayingEffect"],[4,"Direction"],[13,"Polar"],[13,"Spherical"],[13,"Cartesian"],[3,"Level"],[3,"Vector3"],[4,"HapticEffect"],[4,"WaveKind"],[3,"Envelope"],[3,"Play"],[3,"Trigger"],[3,"Wave"],[3,"Condition"],[3,"Ramp"],[3,"Custom"],[13,"Constant"],[13,"Periodic"],[13,"Condition"],[13,"Ramp"],[13,"Custom"],[13,"LeftRight"],[3,"HapticRumble"],[4,"HintPriority"],[3,"HintObserver"],[3,"HintEvent"],[3,"MetalView"],[4,"PowerState"],[3,"PowerInfo"],[3,"PasteExFlip"],[3,"Renderer"],[3,"PasteExOption"],[8,"PasteExt"],[3,"ClippedRenderer"],[4,"RendererKind"],[3,"RendererInfo"],[8,"RendererInfoExt"],[3,"Pen"],[3,"ScreenSaver"],[8,"Surface"],[3,"RawSurface"],[3,"AlphaMod"],[3,"Blended"],[3,"BmpSaveError"],[3,"Bmp"],[8,"BmpSaveExt"],[3,"Clipped"],[3,"Cloned"],[3,"ColorMod"],[3,"Owned"],[3,"RleLock"],[3,"Rle"],[3,"WindowSurface"],[3,"SimdAllocator"],[4,"TextureAccess"],[8,"QueryExt"],[3,"Texture"],[3,"Lock"],[3,"VkSurface"],[3,"VkInstance"],[4,"HitTestResult"],[4,"WindowFormat"],[4,"WindowContextKind"],[8,"ConfigExt"],[3,"Window"],[3,"WindowState"],[3,"Brightness"],[3,"Opacity"],[3,"Gamma"],[3,"GammaParam"],[8,"BorderExt"],[3,"BorderWidths"],[3,"WindowCoord"],[3,"WindowBuilder"],[3,"Position"],[3,"HitTest"],[8,"BrightnessExt"],[8,"GammaExt"],[8,"MouseGrabExt"],[4,"SystemCursorKind"],[3,"Cursor"],[4,"MessageBoxKind"],[3,"MessageBox"],[3,"ColorScheme"],[3,"Button"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};